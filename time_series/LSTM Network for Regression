{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"LSTM Network for Regression","provenance":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"hkyFlTaZ0T83","colab_type":"text"},"source":["https://machinelearningmastery.com/time-series-prediction-with-deep-learning-in-python-with-keras/"]},{"cell_type":"markdown","metadata":{"id":"VF0uBUZ9OXOG","colab_type":"text"},"source":["# Problem Description\n","The problem we are going to look at in this post is theInternational Airline Passengers prediction problem.\n","\n","This is a problem where, given a year and a month, the task is to predict the number of international airline passengers in units of 1,000. The data ranges from January 1949 to December 1960, or 12 years, with 144 observations."]},{"cell_type":"markdown","metadata":{"id":"jNQYMgkz-GEd","colab_type":"text"},"source":["We can load this dataset easily using the Pandas library. We are not interested in the date, given that each observation is separated by the same interval of one month. Therefore, when we load the dataset we can exclude the first column.\n","\n","Once loaded we can easily plot the whole dataset. The code to load and plot the dataset is listed below."]},{"cell_type":"code","metadata":{"id":"dXPesUZOIp33","colab_type":"code","outputId":"bd8f2ee0-0e0f-4780-f1ac-87139d9ecd16","executionInfo":{"status":"ok","timestamp":1569186200552,"user_tz":180,"elapsed":1234,"user":{"displayName":"juanc bellassai","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAhHOfoN9ha1dGrwLa9ni9K8a8meAMjWGwikDxDKQ=s64","userId":"01595778683498341982"}},"colab":{"base_uri":"https://localhost:8080/","height":269}},"source":["import pandas\n","import matplotlib.pyplot as plt\n","dataset = pandas.read_csv('AirPassengers.csv', usecols=[1], engine='python')\n","plt.plot(dataset)\n","plt.show()"],"execution_count":1,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nRK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"ogcUXIbX-Ytd","colab_type":"text"},"source":["You can see an upward trend in the dataset over time.\n","\n","You can also see some periodicity to the dataset that probably corresponds to the Northern Hemisphere vacation period."]},{"cell_type":"code","metadata":{"id":"yJ_HYBzx9vRI","colab_type":"code","outputId":"9d1b68ac-af18-49a5-dcd5-95f81ab2bdfd","executionInfo":{"status":"ok","timestamp":1569186206141,"user_tz":180,"elapsed":911,"user":{"displayName":"juanc bellassai","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAhHOfoN9ha1dGrwLa9ni9K8a8meAMjWGwikDxDKQ=s64","userId":"01595778683498341982"}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["dataset.head() #notar que aca cargamos directamente las valores sin las fechas."],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>#Passengers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>112</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>118</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>132</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>129</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>121</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   #Passengers\n","0          112\n","1          118\n","2          132\n","3          129\n","4          121"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"JWomfml5-XUi","colab_type":"text"},"source":["You can see an upward trend in the dataset over time.\n","\n","You can also see some periodicity to the dataset that probably corresponds to the Northern Hemisphere vacation period."]},{"cell_type":"markdown","metadata":{"id":"MrMuEZdI-meM","colab_type":"text"},"source":["# Long Short-Term Memory Network\n","The Long Short-Term Memory network, or LSTM network, is a recurrent neural network that is trained using Backpropagation Through Time and overcomes the vanishing gradient problem.\n","\n","As such, it can be used to create large recurrent networks that in turn can be used to address difficult sequence problems in machine learning and achieve state-of-the-art results.\n","\n","Instead of neurons, LSTM networks have memory blocks that are connected through layers.\n","\n","A block has components that make it smarter than a classical neuron and a memory for recent sequences. A block contains gates that manage the block’s state and output. A block operates upon an input sequence and each gate within a block uses the sigmoid activation units to control whether they are triggered or not, making the change of state and addition of information flowing through the block conditional.\n","\n","There are three types of gates within a unit:\n","\n","Forget Gate: conditionally decides what information to throw away from the block.\n","Input Gate: conditionally decides which values from the input to update the memory state.\n","Output Gate: conditionally decides what to output based on input and the memory of the block.\n","Each unit is like a mini-state machine where the gates of the units have weights that are learned during the training procedure.\n","\n","You can see how you may achieve sophisticated learning and memory from a layer of LSTMs, and it is not "]},{"cell_type":"markdown","metadata":{"id":"rtW2CYEK_yMx","colab_type":"text"},"source":["# LSTM Network for Regression\n","We can phrase the problem as a regression problem.\n","\n","That is, given the number of passengers (in units of thousands) this month, what is the number of passengers next month?\n","\n","We can write a simple function to convert our single column of data into a two-column dataset: the first column containing this month’s (t) passenger count and the second column containing next month’s (t+1) passenger count, to be predicted.\n","\n","Before we get started, let’s first import all of the functions and classes we intend to use. This assumes a working SciPy environment with the Keras deep learning library installed."]},{"cell_type":"code","metadata":{"id":"UiPCAKEEJ3te","colab_type":"code","outputId":"37bba72c-f227-4894-fb0c-6349f4c5a936","executionInfo":{"status":"ok","timestamp":1569186214083,"user_tz":180,"elapsed":3280,"user":{"displayName":"juanc bellassai","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAhHOfoN9ha1dGrwLa9ni9K8a8meAMjWGwikDxDKQ=s64","userId":"01595778683498341982"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["import numpy\n","import matplotlib.pyplot as plt\n","import pandas\n","import math\n","from keras.models import Sequential\n","from keras.layers import Dense\n","from keras.layers import LSTM\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.metrics import mean_squared_error"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"B1TpO-TDBB2I","colab_type":"text"},"source":["Before we do anything, it is a good idea to fix the random number seed to ensure our results are reproducible."]},{"cell_type":"code","metadata":{"id":"1StKWY80J_-K","colab_type":"code","colab":{}},"source":["# fix random seed for reproducibility\n","numpy.random.seed(7)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OPZB7UyJBYhM","colab_type":"text"},"source":["We can also use the code from the previous section to load the dataset as a Pandas dataframe. We can then extract the NumPy array from the dataframe and convert the integer values to floating point values, which are more suitable for modeling with a neural network."]},{"cell_type":"code","metadata":{"id":"Yf2dvUgdKH3s","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"01d19015-b3ee-4439-8e71-7469b29ac977","executionInfo":{"status":"ok","timestamp":1569186765368,"user_tz":180,"elapsed":1685,"user":{"displayName":"juanc bellassai","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAhHOfoN9ha1dGrwLa9ni9K8a8meAMjWGwikDxDKQ=s64","userId":"01595778683498341982"}}},"source":["# load the dataset\n","dataframe = pandas.read_csv('AirPassengers.csv', usecols=[1], engine='python')\n","#dataset = dataframe.values\n","#dataset = dataset.astype('float32')\n","#print(dataset.dtype)\n","#print(dataset.shape)\n","#dataset\n","dataframe.shape"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(144, 1)"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"BbxIbeFcBs5r","colab_type":"text"},"source":["LSTMs are sensitive to the scale of the input data, specifically when the sigmoid (default) or tanh activation functions are used. It can be a good practice to rescale the data to the range of 0-to-1, also called normalizing. We can easily normalize the dataset using the **MinMaxScaler** preprocessing class from the **scikit-learn library**."]},{"cell_type":"code","metadata":{"id":"WyBbrK7jKVjw","colab_type":"code","colab":{}},"source":["# normalize the dataset\n","scaler = MinMaxScaler(feature_range=(0, 1))\n","dataset = scaler.fit_transform(dataset)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9uSHCDirFGUX","colab_type":"text"},"source":["After we model our data and estimate the skill of our model on the training dataset, we need to get an idea of the skill of the model on new unseen data. For a normal classification or regression problem, we would do this using cross validation.\n","\n","With time series data, the sequence of values is important. A simple method that we can use is to split the ordered dataset into train and test datasets. The code below calculates the index of the split point and separates the data into the training datasets with 67% of the observations that we can use to train our model, leaving the remaining 33% for testing the model."]},{"cell_type":"code","metadata":{"id":"AaaHuNzXKcoH","colab_type":"code","outputId":"d8ca5ab1-8517-42c9-9363-d89ec16d862f","executionInfo":{"status":"ok","timestamp":1568836269371,"user_tz":180,"elapsed":828,"user":{"displayName":"juanc bellassai","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAhHOfoN9ha1dGrwLa9ni9K8a8meAMjWGwikDxDKQ=s64","userId":"01595778683498341982"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# split into train and test sets\n","train_size = int(len(dataset) * 0.67)\n","test_size = len(dataset) - train_size\n","train, test = dataset[0:train_size,:], dataset[train_size:len(dataset),:]\n","print(len(train), len(test))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["96 48\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"hs91Llb1GwAF","colab_type":"text"},"source":["Now we can define a function to create a new dataset, as described above.\n","\n","The function takes two arguments: the dataset, which is a NumPy array that we want to convert into a dataset, and the look_back, which is the number of previous time steps to use as input variables to predict the next time period — in this case defaulted to 1.\n","\n","This default will create a dataset where X is the number of passengers at a given time (t) and Y is the number of passengers at the next time (t + 1).\n","\n","It can be configured, and we will by constructing a differently shaped dataset in the next section."]},{"cell_type":"code","metadata":{"id":"k5rmDSZNGw4Q","colab_type":"code","colab":{}},"source":["# convert an array of values into a dateset matrix\n","\n","def create_dataset(dataset, look_back=1):\n","  dataX, dataY = [], []\n","  for i in range(len(dataset)-look_back-1):\n","    a = dataset[i:(i+look_back), 0]\n","    dataX.append(a)\n","    dataY.append(dataset[i+look_back, 0])\n","  return numpy.array(dataX), numpy.array(dataY)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VzqQR656KfcC","colab_type":"text"},"source":["Let’s use this function to prepare the train and test datasets for modeling."]},{"cell_type":"code","metadata":{"id":"jeMoPWulOPZZ","colab_type":"code","colab":{}},"source":["# reshape into X=t and Y=t+1\n","look_back = 1\n","trainX, trainY = create_dataset(train, look_back)\n","testX, testY = create_dataset(test, look_back)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"55wl2fYyPOty","colab_type":"text"},"source":["The LSTM network expects the input data (X) to be provided with a specific array structure in the form of: [samples, time steps, features].\n","\n","Currently, our data is in the form: [samples, features] and we are framing the problem as one time step for each sample. We can transform the prepared train and test input data into the expected structure using **numpy.reshape()** as follows:"]},{"cell_type":"code","metadata":{"id":"dKA7I3NFOygd","colab_type":"code","colab":{}},"source":["# reshape input to be [samples, time steps, features]\n","trainX = numpy.reshape(trainX, (trainX.shape[0], 1, trainX.shape[1]))\n","testX =  numpy.reshape(testX, (testX.shape[0], 1, testX.shape[1]))"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NEDMXR4nRIVW","colab_type":"text"},"source":["We are now ready to design and fit our LSTM network for this problem.\n","\n","The network has a visible layer with 1 input, a hidden layer with 4 LSTM blocks or neurons, and an output layer that makes a single value prediction. The default sigmoid activation function is used for the LSTM blocks. The network is trained for 100 epochs and a batch size of 1 is used."]},{"cell_type":"code","metadata":{"id":"6jOnRGugQyty","colab_type":"code","outputId":"fd89bfa2-069b-45e0-a781-528171483290","executionInfo":{"status":"ok","timestamp":1568837875809,"user_tz":180,"elapsed":19192,"user":{"displayName":"juanc bellassai","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAhHOfoN9ha1dGrwLa9ni9K8a8meAMjWGwikDxDKQ=s64","userId":"01595778683498341982"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["# create and fit the LSTM network\n","model = Sequential()\n","model.add(LSTM(4, input_shape=(1, look_back)))\n","model.add(Dense(1))\n","model.compile(loss='mean_squared_error', optimizer='adam')\n","model.fit(trainX, trainY, epochs=100, batch_size=1, verbose=2)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_grad.py:1250: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1033: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1020: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.\n","\n","Epoch 1/100\n"," - 1s - loss: 0.0322\n","Epoch 2/100\n"," - 0s - loss: 0.0143\n","Epoch 3/100\n"," - 0s - loss: 0.0112\n","Epoch 4/100\n"," - 0s - loss: 0.0102\n","Epoch 5/100\n"," - 0s - loss: 0.0093\n","Epoch 6/100\n"," - 0s - loss: 0.0084\n","Epoch 7/100\n"," - 0s - loss: 0.0076\n","Epoch 8/100\n"," - 0s - loss: 0.0068\n","Epoch 9/100\n"," - 0s - loss: 0.0060\n","Epoch 10/100\n"," - 0s - loss: 0.0053\n","Epoch 11/100\n"," - 0s - loss: 0.0045\n","Epoch 12/100\n"," - 0s - loss: 0.0039\n","Epoch 13/100\n"," - 0s - loss: 0.0035\n","Epoch 14/100\n"," - 0s - loss: 0.0031\n","Epoch 15/100\n"," - 0s - loss: 0.0027\n","Epoch 16/100\n"," - 0s - loss: 0.0025\n","Epoch 17/100\n"," - 0s - loss: 0.0023\n","Epoch 18/100\n"," - 0s - loss: 0.0022\n","Epoch 19/100\n"," - 0s - loss: 0.0022\n","Epoch 20/100\n"," - 0s - loss: 0.0021\n","Epoch 21/100\n"," - 0s - loss: 0.0020\n","Epoch 22/100\n"," - 0s - loss: 0.0021\n","Epoch 23/100\n"," - 0s - loss: 0.0021\n","Epoch 24/100\n"," - 0s - loss: 0.0021\n","Epoch 25/100\n"," - 0s - loss: 0.0021\n","Epoch 26/100\n"," - 0s - loss: 0.0021\n","Epoch 27/100\n"," - 0s - loss: 0.0021\n","Epoch 28/100\n"," - 0s - loss: 0.0021\n","Epoch 29/100\n"," - 0s - loss: 0.0020\n","Epoch 30/100\n"," - 0s - loss: 0.0020\n","Epoch 31/100\n"," - 0s - loss: 0.0021\n","Epoch 32/100\n"," - 0s - loss: 0.0020\n","Epoch 33/100\n"," - 0s - loss: 0.0021\n","Epoch 34/100\n"," - 0s - loss: 0.0021\n","Epoch 35/100\n"," - 0s - loss: 0.0020\n","Epoch 36/100\n"," - 0s - loss: 0.0020\n","Epoch 37/100\n"," - 0s - loss: 0.0021\n","Epoch 38/100\n"," - 0s - loss: 0.0020\n","Epoch 39/100\n"," - 0s - loss: 0.0020\n","Epoch 40/100\n"," - 0s - loss: 0.0020\n","Epoch 41/100\n"," - 0s - loss: 0.0020\n","Epoch 42/100\n"," - 0s - loss: 0.0020\n","Epoch 43/100\n"," - 0s - loss: 0.0021\n","Epoch 44/100\n"," - 0s - loss: 0.0020\n","Epoch 45/100\n"," - 0s - loss: 0.0020\n","Epoch 46/100\n"," - 0s - loss: 0.0020\n","Epoch 47/100\n"," - 0s - loss: 0.0020\n","Epoch 48/100\n"," - 0s - loss: 0.0021\n","Epoch 49/100\n"," - 0s - loss: 0.0020\n","Epoch 50/100\n"," - 0s - loss: 0.0020\n","Epoch 51/100\n"," - 0s - loss: 0.0020\n","Epoch 52/100\n"," - 0s - loss: 0.0020\n","Epoch 53/100\n"," - 0s - loss: 0.0020\n","Epoch 54/100\n"," - 0s - loss: 0.0020\n","Epoch 55/100\n"," - 0s - loss: 0.0020\n","Epoch 56/100\n"," - 0s - loss: 0.0021\n","Epoch 57/100\n"," - 0s - loss: 0.0021\n","Epoch 58/100\n"," - 0s - loss: 0.0021\n","Epoch 59/100\n"," - 0s - loss: 0.0020\n","Epoch 60/100\n"," - 0s - loss: 0.0020\n","Epoch 61/100\n"," - 0s - loss: 0.0021\n","Epoch 62/100\n"," - 0s - loss: 0.0020\n","Epoch 63/100\n"," - 0s - loss: 0.0021\n","Epoch 64/100\n"," - 0s - loss: 0.0020\n","Epoch 65/100\n"," - 0s - loss: 0.0020\n","Epoch 66/100\n"," - 0s - loss: 0.0020\n","Epoch 67/100\n"," - 0s - loss: 0.0021\n","Epoch 68/100\n"," - 0s - loss: 0.0021\n","Epoch 69/100\n"," - 0s - loss: 0.0020\n","Epoch 70/100\n"," - 0s - loss: 0.0020\n","Epoch 71/100\n"," - 0s - loss: 0.0021\n","Epoch 72/100\n"," - 0s - loss: 0.0020\n","Epoch 73/100\n"," - 0s - loss: 0.0021\n","Epoch 74/100\n"," - 0s - loss: 0.0020\n","Epoch 75/100\n"," - 0s - loss: 0.0021\n","Epoch 76/100\n"," - 0s - loss: 0.0020\n","Epoch 77/100\n"," - 0s - loss: 0.0020\n","Epoch 78/100\n"," - 0s - loss: 0.0021\n","Epoch 79/100\n"," - 0s - loss: 0.0020\n","Epoch 80/100\n"," - 0s - loss: 0.0020\n","Epoch 81/100\n"," - 0s - loss: 0.0020\n","Epoch 82/100\n"," - 0s - loss: 0.0020\n","Epoch 83/100\n"," - 0s - loss: 0.0021\n","Epoch 84/100\n"," - 0s - loss: 0.0020\n","Epoch 85/100\n"," - 0s - loss: 0.0020\n","Epoch 86/100\n"," - 0s - loss: 0.0020\n","Epoch 87/100\n"," - 0s - loss: 0.0020\n","Epoch 88/100\n"," - 0s - loss: 0.0021\n","Epoch 89/100\n"," - 0s - loss: 0.0020\n","Epoch 90/100\n"," - 0s - loss: 0.0020\n","Epoch 91/100\n"," - 0s - loss: 0.0020\n","Epoch 92/100\n"," - 0s - loss: 0.0020\n","Epoch 93/100\n"," - 0s - loss: 0.0021\n","Epoch 94/100\n"," - 0s - loss: 0.0020\n","Epoch 95/100\n"," - 0s - loss: 0.0020\n","Epoch 96/100\n"," - 0s - loss: 0.0020\n","Epoch 97/100\n"," - 0s - loss: 0.0020\n","Epoch 98/100\n"," - 0s - loss: 0.0020\n","Epoch 99/100\n"," - 0s - loss: 0.0020\n","Epoch 100/100\n"," - 0s - loss: 0.0020\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fc5b480bcc0>"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"YjFcqUU7CFpY","colab_type":"text"},"source":["Once the model is fit, we can estimate the performance of the model on the train and test datasets. This will give us a point of comparison for new models.\n","\n","Note that we invert the predictions before calculating error scores to ensure that performance is reported in the same units as the original data (thousands of passengers per month)."]},{"cell_type":"code","metadata":{"id":"NulRntwXCH_d","colab_type":"code","outputId":"b8956f93-cf2f-4cf4-8430-743987695ed8","executionInfo":{"status":"ok","timestamp":1568838405177,"user_tz":180,"elapsed":820,"user":{"displayName":"juanc bellassai","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAhHOfoN9ha1dGrwLa9ni9K8a8meAMjWGwikDxDKQ=s64","userId":"01595778683498341982"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# make predictions\n","trainPredict = model.predict(trainX)\n","testPredict = model.predict(testX)\n","\n","# invert predictions\n","trainPredict = scaler.inverse_transform(trainPredict)\n","trainY = scaler.inverse_transform([trainY])\n","testPredict = scaler.inverse_transform(testPredict)\n","testY = scaler.inverse_transform([testY])\n","\n","# calculate root mean squared error\n","trainScore = math.sqrt(mean_squared_error(trainY[0], trainPredict[:,0]))\n","print('Train Score: %.2f RMSE' % (trainScore))\n","testScore = math.sqrt(mean_squared_error(testY[0], testPredict[:,0]))\n","print('Test Score: %.2f RMSE' % (testScore))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Train Score: 22.86 RMSE\n","Test Score: 47.81 RMSE\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"nY4aNtXaD8O8","colab_type":"text"},"source":["Finally, we can generate predictions using the model for both the train and test dataset to get a visual indication of the skill of the model.\n","\n","Because of how the dataset was prepared, we must shift the predictions so that they align on the x-axis with the original dataset. Once prepared, the data is plotted, showing the original dataset in blue, the predictions for the training dataset in green, and the predictions on the unseen test dataset in red."]},{"cell_type":"code","metadata":{"id":"KiCL2oQuDtd6","colab_type":"code","outputId":"05f6f868-5b5b-4e23-841c-b8c073731791","executionInfo":{"status":"ok","timestamp":1568838969226,"user_tz":180,"elapsed":1186,"user":{"displayName":"juanc bellassai","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAhHOfoN9ha1dGrwLa9ni9K8a8meAMjWGwikDxDKQ=s64","userId":"01595778683498341982"}},"colab":{"base_uri":"https://localhost:8080/","height":541}},"source":["# shift train predictions for plotting\n","trainPredictPlot = numpy.empty_like(dataset)\n","trainPredictPlot[:, :] = numpy.nan\n","trainPredictPlot[look_back:len(trainPredict)+look_back, :] = trainPredict\n","\n","# shift test predictions for plotting\n","testPredictPlot = numpy.empty_like(dataset)\n","testPredictPlot[:, :] = numpy.nan\n","testPredictPlot[len(trainPredict)+(look_back*2)+1:len(dataset)-1, :] = testPredict\n","\n","# plot baseline and predictions\n","ax = plt.subplots(figsize=(12, 9))\n","plt.plot(scaler.inverse_transform(dataset))\n","plt.plot(trainPredictPlot)\n","plt.plot(testPredictPlot)\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAskAAAIMCAYAAAAHEDHqAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzs3XmwY+lZJvjnk450JB0td98yqyrL\nrnJt2GWXy7i8QANuzLA0psH0DNDYM21wNA3NzHQEPQwTQcd0Tw8zPdHD0nQwAZjFbjfYmLbLgMM2\nGIyN21sZV5Vry6qiKqvyXt1du3SOzpHON3+cRedIR3k3XS03n18E4by6Ut7vZiZRj977fu8rpJQg\nIiIiIqKe2KQPQEREREQ0bRiSiYiIiIj6MCQTEREREfVhSCYiIiIi6sOQTERERETUhyGZiIiIiKgP\nQzIRERERUR+GZCIiIiKiPgzJRERERER9GJKJiIiIiPookz4AACwtLckrV65M+hhEREREdMF97Wtf\nO5BSLh/1vKkIyVeuXMEjjzwy6WMQERER0QUnhHjpOM9juwURERERUR+GZCIiIiKiPgzJRERERER9\nGJKJiIiIiPowJBMRERER9WFIJiIiIiLqw5BMRERERNSHIZmIiIiIqA9DMhERERFRH4ZkIiIiIqI+\nDMlERERERH0YkomIiIiI+jAkExERERH1YUgmIiIiIurDkExERERE1IchmYiIiIioD0MyEREREVEf\nhmQiIiIioj4MyUREREREfRiSiYiIiCjSLz78BP7dJ5+Z9DEmgiGZiIiIiCJ94fkDfOBLL8Hq2pM+\nytgxJBMRERFRpEa7g7rRwZdfKE36KGPHkExEREREkepGBwDw6ad2JnyS8WNIJiIiIqIBXVuiZXYB\nAH/x1C6klBM+0XgxJBMRERHRgIZbRb5nPY9i1cCTxdqETzReDMlERERENKBmWACAd7x2AzEBfPqp\n3QmfaLwYkomIiIhoQKPtVJJvW8jgwSsL+PSTN1dfMkMyEREREQ3wLu3lUgm8/d5VPLNTx/VSa8Kn\nGh+GZCIiIiIa0Gg77RbZlILvvHcVAPDnN1HLBUMyEREREQ3oVZIV3Lao4a7V3E01Co4hmYiIiIgG\n1LyQrCoAgO+8dxVfvVZGpWVO8lhjw5BMRERERAMagZ5kwAnJXVviL5/Zm+SxxoYhmYiIiIgG1A0L\nSkwglXDi4qsvFbCWT900fckMyUREREQ0oNHuIJtSIIQAAMRiAt9+9zL+5vmDCZ9sPBiSiYiIiGhA\n3eggl1JCj63l06gbHXS69oRONT7HCslCiDkhxEeEEM8IIZ4WQrxJCLEghPhzIcRz7v/Ou88VQohf\nE0I8L4R4XAjxwPl+C0REREQ0anXDQlZNhB7T1DgAoGl2J3GksTpuJflXAXxSSnk3gPsBPA3g5wF8\nRkp5J4DPuB8DwHcDuNP9v/cC+I2RnpiIiIiIzl1UJTnrTrpoutv4LrIjQ7IQogDgWwG8DwCklKaU\nsgLgHQB+333a7wP4AffX7wDwfun4EoA5IcT6yE9OREREROembnT88W8ejSE55HYA+wB+VwjxdSHE\nbwshNACrUspt9zk7AFbdX18CcD3w+k33MSIiIiKaEY328EpygyEZAKAAeADAb0gpXwegiV5rBQBA\nSikByJN8YSHEe4UQjwghHtnf3z/JS4mIiIjonNUNy5+R7OlVktmTDDiV4E0p5Zfdjz8CJzTvem0U\n7v96k6W3ANwSeP1l97EQKeVvSikflFI+uLy8fNrzExEREdGISSlRN5wRcEGZpHNxj5VkAFLKHQDX\nhRB3uQ+9DcBTAD4O4N3uY+8G8LD7648DeJc75eIhANVAWwYRERERTbl2x0bHljf1xT3l6KcAAP45\ngA8KIZIAXgDwP8AJ2B8WQrwHwEsA/pH73E8A+B4AzwNouc8lIiIiohlRMywAGHpxr2UyJAMApJSP\nAngw4lNvi3iuBPDTZzwXEREREU1Iw3BCcH9Pcu/iHnuSiYiIiOgmU/dDcriemkrEEBM3R7sFQzIR\nERERhXghOdvXbiGEgKYqvLhHRERERDefRtvtSe5rtwCc4MxKMhERERHddGpD2i0265uI576B5k1w\ncY8hmYiIiIhCGkNC8h888weo5t6Hw/buJI41VgzJRERERBQyrCe50q4AAHa7nx/7mcaNIZmIiIiI\nQhptC+lEHEo8HBVr7RoAoBL/ImxpT+JoY8OQTEREREQhdaMz0GoBAFWzCoEYuvFDPLLzyARONj4M\nyUREREQUUjc6yEaE5Fq7hhXlNYCdwsee/9gETjY+DMlEREREFFJvdyLHv9XMGrLKIrq1+/HnL/05\nGmZjAqcbD4ZkIiIiIgqpGxbyUe0W7SqyiRyM8uthdA186tqnJnC68WBIJiIiIqKQhtEZmGxhdAyY\ntolcMg/buAW35W6/0C0XDMlEREREFBJ1ca9mOpMt8sk8AIG3Xf5ePLr/KF6svjiBE54/hmQiIiIi\nCqkbFrJquCe52q4CAObUOQDAQ6tvR1zE8fDzD4/9fOPAkExEREREvq4t0TS7QyvJ8+k8ACCJAt56\n6a34k7/7E3Tt7tjPed4YkomIiIjI12hHr6T2KslL6Xn3eV187yu+F3v6Hp4uPT3eQ44BQzIRERER\n+YaFZK+SvJxx2i2a7Q7WtXUAvXXVFwlDMhERERH56oYFAANzkr2V1CtZp5LcbHeQS+ac15j1MZ5w\nPBiSiYiIiMhXN5xKcv8IuKpZRUzEsKwVADghOZvIOq9hSCYiIiKii6xhDGm3aNeQS+b8CnPT7PqV\n5IZ18TbvMSQTERERka82rN3CrCGfzENV4kjEBRrtDtJKGnERv5DrqRmSiYiIiMg3dLqFWUUh6bRa\naKqCZrsDIQS0hMZ2CyIiIiK62OpD2i3q7TryqjMjWUsqvTCdzLHdgoiIiIgutrphIR4TSCfiocer\nZtVdSe1c6msGQjIryURERER0oTWMDrKqAiFE6PFau4aC6rVbxNFsO1v2soksQzIRERERXWx1ozPQ\naiGl9C/uAU5PstdukU1m2W5BRERERBdbvd0ZmJHctJroyq5fSQ61WyRynG5BRERERBdb3bCQjxj/\nBiBUSW4GKsl1i+0WRERERHSB1Y0Osv2LRPpCclbtm25hNmBLe7wHPWcMyURERETn6INffgn/6uEn\nJn2MY2u0B3uSq+0qAPRGwKlxNM0upJTIJXKQkGhZrbGf9TwxJBMRERGdk5bZwb/75FX82Te2J32U\nY4u6uNdfSc4kFXRtiXbHRjaZBXDxVlMzJBMRERGdkz96ZBNV3fIXdMwCZwRcuCfZqyQHL+4BTtXZ\nC8kXbQwcQzIRERHROejaEu/7mxcBAO2OjU53+nt2DasLs2sfWUnW3JDcbHeQS+QAsJJMRERERMfw\n6Sd38HKphTdcmQcAf/nGNBu2krrWrkGJKUgraQBAVnW28bGSTEREREQn8luffwG3LmTwD193GQDQ\nMKe/5cKfWNF/cc9dSe1t4etVkrvIJZ1KMkMyEREREd3Q114q4W9fruA9b70d+bTbvzsDfcl1wwIA\n5Pp6koMrqYFASDYD7RYXbKEIQzIRERHRiP3W515EIZ3ADz942Q+UXpV2mnlBPmpOstePDPQu7jWD\n7RYXbKEIQzIRERHRCF07aOJTT+3gx954KzJJJRQop11tSE9ytV2NriS3O0jFU1CEwkoyEREREQ33\nO194EUpM4L9/8xUAmKmQ7Pck97db9FeSk151vAshBLLJLKdbEBEREdFwf/HULr7z3lWs5FMAwjOF\np53fkxwx3SIYkjV3ukUzsJqaF/eIiIiIaKhyy8KlubT/8Sz1JNcjepK7dhd1qx5qt1DiMahKzA/J\n2USWIZmIiIiIopkdG7rVRT7Va1for7pOs0a7g1QihkS8FxG9NopgJRlwKuSNQCWZ7RZEREREFKmq\nO+0KhUwvJKtKHIm4QGMmlolYyKWiV1Ln1XBI1lSFlWQiIiIiOlrN7ektpMNBMxsIlNOsbnSQU6NX\nUheShdDjmqr4wZ8X94iIiIhoKK+SnO+rxmqzFJIjxr8Bg5XkrBoPXdzjCDgiIiIiiuSH5IhKcn0m\nQvJgu4VXSe7vSdZUBU2zF5KbVhO2tMdz0DFgSCYiIiIakZoe3W4xK5XkRrvjj6zz1Npuu4Ua1W7R\n60mWkBeq5YIhmYiIiGhEan4lORw0ZyUkR7ZbmG67RX8lORlutwBwoVouGJKJiIiIRqQ6pJKcC1Rd\na2YNH33uo5BSjv18R2kYndCMZMCpJKeVNJLxZOhxJ/i7F/cSWQC4UBMuGJKJiIiIRqSqW0glYlCV\neOhxTY37IfmXv/bL+MX/+ot4uf7yJI44lG1LNMxOZE+yVykOyro9yVJKZJNOSGa7BRERERENqOmd\ngSoy0Ku6vlR7CR997qPOc91e32nRMDuQEshHTLfob7UAnO9JSqBldpFLsN2CiIiIiIao6tbA+Deg\nV3X99a//OrrSaVGoW9PVmlBumgCA+Uy4raJm1gYu7QG9ddvNdsevNE/b93QWDMlEREREI1LVrchK\nclZVIJJFfPLaJ/Ftl78NwPRVXUtuSF7QwiG5akZXkrPuuu1Gu+O3W7AnmYiIiIgG1IzokKypCtSV\nTyGbyOFnXvczAKavf7fccivJfSG51q5Ft1sknUpyy+xyugURERERDVfVrYFFIgBw2HkGSvYq/uEr\n/jE2shsApq/qWmo6kzkWjtlu4c1TbrQ7UOMqErEE2y2IiIiIaFBUu4WUEp/Z/T3YnRy+ff0HoSU0\nCIjpqyR7Pcla7/xW14Le0Yde3ANwYVdTMyQTERERjYBtSzTanYFK8ue3Po8XG0/APPgOWB0FMRGD\nltCmLlAeNk0k4iK0cc9bJHKji3vBrXvT9j2dBUMyERER0QjUjegRap+69inkE3Owym/oLd9IZqeu\n3aLcNLGgJSGE8B+rmc6YuuiLe14l2fmecskcatZ0jbU7C4ZkIiIiohEYtm2vZJSwnF4D0FtNnU1k\np67dotQyB8e/ubOc82pUu4Uz3cL/npKsJBMRERFRn2EhudquYj41BwCoT3H/rldJDvIqyYVkRLtF\nMtxukUtM3/d0FgzJRERERCNQM6JDcqVdwYIbkoOV5GmbBFFqmQPj36ptpyc5qpIciwlkkvFQJXna\nvqezYEgmIiIiGgGvktx/ca/SrmAxPQ8hprs1odw0I8e/AdE9yYC7btvkxT0iIiIiGiKq3aJjd1A3\n65hLzSGbVMKtCVPUk9y1JSq6FblIBIC/LKRfVlXQcC/u5ZN5tDotdOzO+R52TBiSiYiIiEagFhGS\n/Z5etQBNVdAwAq0JUzTdotIyISWwkOnrpzaryCayUGJK5Os0NdxuAQBNq3m+hx0ThmQiIiKiEajq\nFuJun66n0q4AAObUOSdQmr2Le5Ztod1tT+Ss/byV1AtZNfT4sJXUnkygOp5NOCF5msL/WTAkExER\nEY2At20vOGfYu/g2p86FWhOmLVCedCW1J6sqoY17AKaqjeQsGJKJiIiIRiBqJXXF6FWSsylloDVh\nWi66lSJWUgNOyL9RJVlTB7+naQn+Z8WQTERERDQCNWNwJbXXblFQC9CSgaprYrqqrn67Rd/FvUq7\ngjl3fF2UrBr3q+P+9zQlwf+sGJKJiIiIRqCqWwMrqfvbLerGdFZd/UpyX7vFoX6IxdTi0NeFgj/b\nLYiIiIioXy2q3aJdgSIUaAltYKYwMD2Bstw0kUnGkUr0Lh22u23UrToW0zcIyaoC3eqia0s/+HsT\nPWYdQzIRERHRCAwLyQW1ACFEqCfZr7pOSWtCqWkOVJFLegkAsJBaGPq6rOpUzptmh+0WRERERBQm\npXTaLdKDF9+86RBZVYHVlWh3utPXbtEysZjtC8mGE5Jv2G7hheR2B4l4AmpcnZrq+FkxJBMRERGd\nUcvsomPLgUpy1axiTnUuvmnu/ORmuwtN0QBMV7vFQD+ycQgAR7Rb9L4nwGkjmZbgf1YMyURERERn\nVDMGt+0BvXYLoFd1bRgdxGNxaAltagJlqWUOTLY41I8OyTn3omLd/f5zyelat30WDMlEREREZ1R1\nV1LnU32VZKNXSfb6d4Mb6qYlUJab1tBK8o16kpfcDX37dWdzYC6ZY08yERER0Xl5YquKr71UmvQx\njq3aGqwkSymdOcNeSE71LrkB0xMo250uGu0OFvoWiRzqh8goGaSV9NDXruVTAIDdmgGA7RZERERE\n50ZKif/pQ4/iX338yUkf5di8SnIwJOsdHaZtDrZbBCrJdWvygbLiBvz5/nYL4/CGrRYAsJhVEY8J\n7HghOTkd39MoHCskCyGuCSG+IYR4VAjxiPvYghDiz4UQz7n/O+8+LoQQvyaEeF4I8bgQ4oHz/AaI\niIjoYnmyWMPzew1/8cYsqLlnDYbk4CIRINBuEVgoMg2V5MOGu20vYgTcjSZbAEA8JrCSU7FTvbnb\nLb5dSvlaKeWD7sc/D+AzUso7AXzG/RgAvhvAne7/vRfAb4zqsERERHTxPfzoFoDexIRZ4Pckp3sb\n97yV1P50i8C4NMBZ4zwNPcnDVlIfGoc37Ef2rOZToXaLafieRuEs7RbvAPD77q9/H8APBB5/v3R8\nCcCcEGL9DF+HiIiIbhJdW+LjjxUB9MLkLPBCci5wcc8LycE5yUCg3SI5Hf273krq/pBcMkpHtlsA\nTl9ysN1C7+iwbGv0Bx2z44ZkCeDTQoivCSHe6z62KqXcdn+9A2DV/fUlANcDr910HyMiIiK6oS+/\neIjdWht3rGT9dcezoKZbyKUUxGPCf6y/3SI4JxmYnnYLr5Ic7Enu2B2UjfLxQnIhhd2qE5LzyTyA\ni7F177gh+a1SygfgtFL8tBDiW4OflFJKOEH62IQQ7xVCPCKEeGR/f/8kLyUiIqIL6uGvF6El4/j+\n+zcAAC1zNqrJNd0aGP/mt1uknJCsxGNIJWK96RaJHEzbhNk1x3vYPl4leS4droJLyCN7kgGn3aLe\n7qDZ7iCbcDYJ3jQhWUq55f7vHoCPAvhmALteG4X7v3vu07cA3BJ4+WX3sf7f8zellA9KKR9cXl4+\n/XdAREREF4JhdfGJJ7bxXfet+SuSZ6UvuapbkYtEAKCQLPiPZVXFv5A4Laupy00ThXQCSrwXC71F\nIsfpSV4rOLOSd2pG73u6ABMujgzJQghNCJHzfg3g7QCeAPBxAO92n/ZuAA+7v/44gHe5Uy4eAlAN\ntGUQERERRfrs1X3UjQ7e8bpLfv9uc0YqyVEhudquQktoSMR7j2uq4vda+1XXCV90K7WsyEt7wI23\n7XlWvVnJVQO5RA7AzVNJXgXwN0KIxwB8BcCfSSk/CeD/AvCdQojnAPx992MA+ASAFwA8D+C3APyz\nkZ+aiIiILpyHH93CUjaJt7xyEVoyPAli2tWM6Eqy14/syQZCci45HYGy1GxjPjO4SATAsdotvIUi\nF62SrBz1BCnlCwDuj3j8EMDbIh6XAH56JKcjIiKim0LNsPCZZ/bwo998K5R4DBk1fMlt2lV1KzT+\nDXBCsjfZwqOpSmiZCDD5QFlqWrg0F96qVzKcbYfHvbgHOCH5DVMS/EeBG/eIiIho4j75xA7Mjo13\nvNa5sJdVZ6uSPKzdIrKSbE5XJbncNCNXUidiCT/I30gmqSCXUkLtFpPusx4FhmQiIiKauIcf3cJt\nixm89hYnVGaSs9OT3O50YVh2ZLtFZCV5ii7uSSlRaplDV1ILIYa8MsyblZxNZhETMZTb5fM47lgx\nJBMREdFE2bbEV14s4e33rvqhrFdJdtotbGljt7k7sTPeSE13Qm8+KiQnwyE5qypoeHOSp+DiXsvs\nwuzYAyupD43DY/Uje9YKKezU2lBiCpbTy9hp7oz6qGPHkExEREQTVdUtWF2J9UKvL7bXk+wE0Pd9\n4334vo9+H/SOPpEz3oi3bS9YSe7YHdTNuj8j2ZNV44PTLSbYbuHNSO6vJJf0423b86zmewtF1rV1\nhmQiIiKiszpotAEASznVf0wLtFt07S4+dPVDMLqGv8VumtQMJyQHK8k1swYAAz3Jmqr4mwTjsTgy\nSmaiF/f8ldT9lWT98Fgzkj1r+RT2G210bYl1bR3bzdmf/suQTERERBN10HCC2lK2F9TiMYF0wqm6\nfqH4Bey2nFaLltWayBlvxKskBzfu+YtE1MF2CwC9CRcTXk1dcldSLwT+7KWUKBmlE7VbrBZS6NoS\nB4021rJr2GnuwJb2yM87TgzJRERENFF+JTmrhh7X1DiaZhd/9Owf+Y9NevFGlFpEu0WtPbySDPTa\nSHKJ3ES/p3JEJblm1tCRnRO1W/izkqsGNrQNWLblz1qeVQzJRERENFHDQ7KCkrGHz21+Dg+sPABg\nOkNyVE+yV0mOGgEH9EJyNpmd6HSLqJ7kkywS8QQXiqxr6wAw8y0XDMlEREQ0UYcNE/GYwFzfdIhM\nUsFL5l/Dljbede+7AABNqzmJI96QV0kOLhOZlXaLcsv5s8+nemf3VlIvpI/fk7xacN7g7NYMrGlr\nABiSiYiIiM7koNHGgpZELBaeyaupArvyc3ho/SHctXAXgOkMyVXdQioRg6rEe4+5FwyHt1s4Y+Am\n3W5RalqYzyRD85C9kHySSvKSpkKJCexUDaxnnUryrE+4YEgmIiKiiTpotAdaLQCgk7wKSxzina96\npz8ubVpDctQiEUUoAxvrNHe0XaPtVJ8n3W4xbNsecLyV1J5YTGAlp2Kn5mzd0xLazFeSlaOfQkRE\nRHR+DhpmaLKFp6J8HqKbxXfc8h3+Y5Ne4RylpnciQ3JezQ9srMupzvMaU1NJNjEfMf4tJmIDVfCj\nrBZS2K0ZEEI4Y+Aasx2SWUkmIiKiiYqqJO+39lGSX4fS/GYk4gkk4gmocXVqK8nB8W+A024RFTK1\nviUp2WQW7W4bVtc6/4NGKLVMLPa9QSkZJcyr84iJk8XEtXwKO+5CkTVtbeYryQzJRERENDFSSjck\nh4Pax57/GCRsWJU3+I9pCW1qp1tEVZKjQ3LfxT23HWNSC0XKUZVk4/BErRae1XwKuzVnUsmGtsGe\nZCIiIqLTapldGJaNxb5K8pd3voxF5RVoNuchpQTghORprSRHheT+yRYAoCoxKDHRm5OczAGYTBuJ\nbUuUWyYWolZSn+DSnmetkEKj3UGj3cF6dh3ldnkql78cF0MyERERTcywGcn7rX3kkyuwJdDuOJvb\nsonsVIbkmmGFVlIDQNWIbrcQQkBTlamoJNcMC7bEyCrJwYUi3hi4ndbsVpMZkomIiGhieiE5HNT2\n9X3MJZyg5gXKaWy36NoSdaMTCslSyqHtFoAzKzk4JxmYTCXZWyQyUEk2SlhIHX9GsmfVDcm7gYUi\nOw2GZCIiIqITO2g4QS1YSTY6BupmHXOqE5Jb7iSIaawk143BbXt6R4dpm5HtFoATkqeh3aLcGty2\n17Ja0Dv66SrJhV4l+SJs3WNIJiIioomJarc40A+cx9JLAHqV5EwiM3Uj4KJWUnuLRIaFZE2N+8tE\nJtlu8cK+84YjWMU/zUpqT3A19XJmGTERY0gmIiIiOo2D+uCP/L2QvJxeBgA0zV7/bqszXRfBotpF\nvJXUw9otgj3Jk6okSynx/i++hFcsabhnLe8/7m/bO0UlOZ2MI59SsFszkIglsJxeZkgmIiIiOo3D\nZhuFdAJJpRdJ9vV9AMCqtgKgN1NYS2pTV0nec0eeLed6lXAvJN+o3SLYZw2Mv5L85RdL+MZWFe/5\nlttD68C9kHyanmTAabnwZiWva+szPQaOIZmIiIgmJmpG8n7LCcmXcqsAEGpNMG0TZtcc7yFvYN+t\nJK/kUv5jXrvFjS7uecFfiSlIK+mxh//f/vwLWNCS+KEHLoceP0u7BeDNSnZDcnadlWQiIiKaHLNj\n408fL+Ldv/MV/PbnX5j0cU7koG4OjH870A8QF3GsZZ2g5rVbeFXXabq8t1drIybC7SInabcAxr+a\n+vm9Bv7i6T38+EO3IZWIhz7nV5LTp6wk51PYqYUryba0z3bgCVEmfQAiIiI6neulFj745Zfxka9d\n96dENNsd/MS3vGLCJzu+g2Y71BMLOO0Wi6lF5FNO8Gy2B0PyfGp+vAcdYr/urNSOB1oWjgrJXiVZ\nSgkhBLLJLOrm+Not3vc3LyKpxPDjb7pt4HOH+iEKagGJWCLilUdbK6SwX2+j07Wxrq3Dsi0c6odY\nziyf9dhjx5BMREQ0gwyri3f8xy+gqlt4290r+NE33ooPffU6ru5OZr3xaR3U21i6Y3BG8mJ6ERnV\nqXK2zPAkiGmqJO832qF+ZMBpt8goGSTi0UFTUxXYEtCtLjJJBdlkdmztFgeNNv7L327ihx64PFDB\nB04/I9mzmk/Bls5ov+AYuFkMyWy3ICIimkFbFR2lpolf+sFX4zff9SC+7a4VLGaTKDenp1/3KO1O\nFzWjM9hu0TrAcmYZqhJHIi4GLrlN00KRvboxEJJvtEgEALIpp0bpT7gYY7vFB774EtodG+956+2R\nnz/UD0/djwyEx8B5W/dmtS+ZIZmIiGgGbVecvs/bFjL+YwuaiopuoWvLSR3rRLyNb4v9K6n1fX/8\nWyapoNW3wnmqKsn1NlYiKsnDJlsAQN4NyTW9t3VvHO0WhtXFB770Ev7+PSu4YyUb+ZySUTrV+DdP\naKFI1t26N6MTLhiSiYiIZlCxogMANubS/mMLmQSkBCqt2agmezOSg9MtOnYHZaPsLxJxxqU57RZ+\nJXlKxsDZtsRBw4xst7hRJXlRc55/6E7GyCayY6kkf/TrWyg1zRv2rJ+1khxcTZ1L5KAlNFaSiYiI\naHyKVR1C9EIJ0FsvXJ6VkOwt4giEzEP9EBIyUEmOD17c60xHJbnUMtG1ZWj8G3B0u8Wi+6bAu2yZ\nS+bGEvy/eq2EtXwKb7w9uue4aTVRt+pn6kle1JIQwnkDIITAuraO7QZDMhEREY1JsaJjOauGlnB4\nY8hKTWtSxzoRPyRrESupM04lWVOV3sa9pNtuYU5HSN6vDy4SkVL6Fw+H8XqwD5u9SrLRNWDZ5/v3\nVqzouGUhDSFE5Oc/fPXDAIA3bbzp1F8jFhPIpxKouOu617XZnZXMkExERDSDihUj1GoBAPMZLyTP\nSiXZbbfIDV9JHVy8kVbSEBDte14QAAAgAElEQVRTc3FvLyIkN60m9I6OlczK0NctuNXWA/f1Xvg/\n72ryVkUf+DfjaVkt/N6Tv4e3bLwFr1l+zZm+zlwmgUqrF5LZk0xERERjU6zq2JgL/5h/YQbbLTLJ\nODLJ3kRabyV1sN3CGwEXEzFoCW1qLu55leTgxb291p7z2A1CcjwmsJBJYj/QbgGcb0ju2hI71cE3\nVp4PX/0wSkYJ//T+f3rmrzWXDlSSs+sot8vQO/qZf99xY0gmIiKaMVJKFCs6NgrhwOOF5K3aPj74\n9AfxI3/6I/iRP/2RSRzxWA4bbb8/1+OF5PDFvd52ukwiM3UhOVhJ3tOPDsmA03IRvLgHAHXr/CZc\nHDTasLoyMiS3rBZ+98nfxZs33ozXrrz2zF+rkEmi6r5Rm+UxcFwmQkRENGMqLQuGZWO9L/A8VXoM\n2Vvfj/dvXYXc6iKXyKFu1aF3dKSV6AriJB00IlZStw4wp875izgyaq+SDIxvEsRx7NUNZFUlVAk/\nTiUZcFpMvJ7scVSSt9xpKJf6fvoAAH/07B+hZJTwU/f/1Ei+1lw6gZcPnTcy3kKRncYOXlGYnU2Q\nACvJREREM2dY4Pmlr/wSYulruDX+Xfjj7/9j/Nwbfg4AUDbKYz/jcRw02gMheV/f96vIgHNxL1hJ\nziayU1VJ7h//5oVkr11kmKWs6vdkj6OSvFX2/s1kQo/rHR2/88Tv4KH1h0ZSRQbcnuTAxT1gNivJ\nDMlEREQzZrvqLBJZD7RbSCmxWd9E1vpmLFk/hFfNv8of5VUyShM551GcSnK43eJAPwgFTC2pwOzY\nsLq283FCm6JKcnRIziVyyCQyQ17lWNQC7Rbuxb3zXCjSm6sdfmPl9SKPqooMOJXkqm7BtiWWM8uI\niRhDMhEREZ2/qEUiNbOGhtVAPrHir6ae5pDctSVKzehK8nImEJJVp5WhFVgoMi0j4A6GhOSjWi0A\np92iaXahm13/7+k8K/7Fio5cSkEulfAf0zs6fveJ38Ub19+IB1YfGNnXKmSSkBKoGx0kYgmsZFYY\nkomIiOj8Fas6kvEYFrVeFbbYKAIAFpJrKLmXphbSTvg61A/Hf8gjlFsmbIlQSJZS4kA/CLVbZNU4\nAKBh9haKTMsykf16G8vZU4Zk93UHjTYySgZpJe2PvzsPWxUDl/p62L+w9QUcGof4iVf/xEi/1lza\nCeIV3fl3OKtj4Hhxj4iIaMYUKwbW51KIxXpLIbYaWwCA1cwGHneXicyr8wCms5J86PbjBqdbVNoV\ndOxOqN3CuxTXavcWikxDJVk3u6i3O1jJD4bk29dvP/L1S/7WvTZuWchgKb3kT/Y4D8WKPhCSX66/\nDAC4b/G+kX6tgheSWxZuWwT+9Zv/9ZHtJ9OIlWQiIqIZs13RsV4I95Z6IflybgONdgftTheZhFOh\nnMaQ7G/bC1Ri/fFvmWAl2QnJjcBq6obVgJRyXEeN5I9/C5y/a3dxoB9gNbN65Ot7lWR3oUp66Zwr\nyYOLRIqNIvLJvD9dY1TmMl4l2XmzdqVw5VjV9WnDkExERDRjikMCTzaRxWrWqR57G88WUgtTHpID\n2/Za4W17gLNMBIA/Bi6byEJCTnw5xV7duTy5ku+9WSkZJXRlN9RTPUyw3QI435DcaHdQ1a2BfzOb\njU1cyl4a+dfzQnJVn4316MMwJBMREc2QTtfGbr09sEik2ChiI7uBRc0JX147w0JqYSpHwPkV1IhK\ncmi6RUQlGcDEJ1xEVZKPu0gE6C1+OQyG5Nb5hOTtIZMttupbuJy7PPKvV0g731t1RjY/DsOQTERE\nNEP26m107cHNaVvNLVzKXsJ832rqaa4kKzHh968Cg9v2gMB0CzMckic9K3m/EbFtr+mE5OO0W6QS\nceRSiv9mYTm9jLpVh9ExRn7W3lzt3r8ZW9ooNornUkkO9iTPMoZkIiKiGeKNf1sPVAWllNiqOyHZ\nq1CWAmPgDo3pm25xUHdWUgvRu3x4oB9AS2ihS16aN92i3Wu3ACYfkvdqbcRjwv/zBqIr4TeynFX9\nsO29MTiPlgs/JM/3QvKBfgDTNs8lJCeVGLRk3O9JnlUMyURERDOk6C4SCVYFq+0qWp0WNrIbmM9E\nV5InfdGt32FzcCX1fmt/IGBq7nSL5hS2WyxqScQDE0Z2W7uIiRgW04vH+j0Ws8lQuwVwPiG5WNER\njwms5HpvrLyLnucRkgFgLpNkJZmIiIjGx68kB6ZbbDWdwOOEZOdH3cFKcsfunOvK49OIWkndPyMZ\ncC7uCREeAQdg4mPg9upG5Pi3pdQSlNjxJuwGV1N7l/3OJyQbWMunQoF+s74J4PxCciGdQFVnTzIR\nERGNyXbE5jRvkcil7CUo8RgK6YS/dW8+5c5K1qerL9lrtwja1wcryUIIaEnFb7fQFLcnecILRfYb\ng4tE9lv7x5ps4XFCcriSfB6zkrciZiR7leSN7MbIvx7ghGRWkomIiGhstipG5GQLoBd4FrQkSm5A\nWUw5P/qfpst7UkocNM1QyPS37WWWBp6fScZ7F/eSbruFOfl2i/6V1Lut3RPNA17MOi0JVtfGvDqP\nmIidW7vFwGSLxhaW0ktIKakhrzqbuUyCI+CIiIhofLarg4Fns76JXDKHfDIPAJjPJFBqOhVKbzX1\nNIXkersDs2OH2i2aVhN6R4+89JZVFX8E3DRc3OvaEgcNM9TjCxx/JbXH+/5LTRPxWByLqcWRh+Su\nLbFTNUKX9gCc22QLz1wmwYt7REREND7Fio71/kUizXDgWdCSKDV7y0SA6QrJB+6M4WC7RdT4N09G\njfvLRJLxJBKxxEQv7pVbJrq2DFWSjY6Bmlk7VUj2Zi4vpZew3xptu8Ve3UAnamRgY+tcQ3IhnUS1\nZU3dhdGTYEgmIiKaEbrZRbllDfSXFhtFbGi93tL5TLLXk6y6PclTFJK9S4WLgUqyV0GN6ul1epI7\nvY8T2kQryXs1J9SuBEKyF25PFpLdhSLN81tNXfQXifT+zXTsDnaaO+deSTa7NnSre25f47wxJBMR\nEc2IYnVwsoWUEluNrdAFrIVsEqWWCSklEvEE8sn8VIVk70LXXHCRSGv4jGFNVfwRcMDkQ3LkIhFv\n21765JXkg/r5rabeqgyODNxp7qAru+eybc8zdwEWijAkExERzYhtN/AEq4KVdgV6Rw+3W2SSMDu2\n36IwbVv3vAtdc5kbb9vzaKrify+A05c8yXYLfyV1MCS3jr+S2rPkvj444aJklNC1R1d9jaokn/dk\nC6D3dxsVkt//xWv4/l//G5gd+9y+/igwJBMREc0IP/AUBgNPMCTPR2zdm6aQ7F3omkv3epIP9AMk\nY0n/8mFQVo1PV7tF3XmzEhmSteOHZC0Zh6rE/HaL5cwyurKLcrs8srNulXUU0glk1d7s5vNeJAI4\nPckAUImYlfzsbh0vl1pIKtMdQ6f7dEREROQrVnUIAawWeuEsqiq4ELV1b4rmJFdbJoQAcqlecNvX\nnRnDwTXVnkxS8ZeJAM5CkUmOgNuvt5FVFWSSvfPvtfaQiqeQS+SO/fsIIZxZyfXz27rnjH8L97Bv\n1jcREzGsaWsj+zr9vEpyNaKSXKwYA33104ghmYiIaEYUKzqWsipUJd57rG9GMjD9leSqbiGfSiAW\n2AB30BrctufRVAVNswvbdiYlaIqGVqc1lrNG2au3Q5f2gN74t6iQfyNLObXX45we/dY9Z5HI4Izk\ntcwaErHEkFedXcHtSY6alRwV3KcRQzIREdGMKFaMyFFe+WQeuWSvgrnQH5LTC6i0K+jYHUyDim6F\n+pGB6G17Hi3pvCnwJiVoSW3ileSlISH5pJa0pL+aejHtLH4Z5Ri4qEBabBRxKXd+rRZAoCc5IiRv\nlQc3AE4jhmQiIqIZUazq2CiEq4JRSyEGQnJqARISlXZlPAc9QqVl+ZVGz4F+4IfEfprbT9sMLBSZ\nZE/ywZBK8klWUnuWsioO+yrJh8bh2Q8JoG5YqBmdyJXU59mPDADpRBzJeGzg4l7NsFBvdwYW4kwj\nhmQiIqIZIKWMrApGBZ58SkE8JkI9yQBQNkZ3Iewsqno4JHfsDmpmzV+h3U9TnUpy051woSU0GF0D\nlj2Z8WJ7fSuppZTYa+1hNbN64t9rKZfEYdOEbUukFKeneVSV5GLENBSjY2Bf3z/3kCyEQCGTQLXv\n4l7UtI1pxZBMREQ0AyotC4ZlD8xILjaKA6O8hBCYz0zv1r3+kFxtVwEABbUQ+XwtOVhJBoCWNf6+\n5JbZQaPdCYXkarsK0zZP126RVdG1pd+WsJhe9MfhnVVUIC02nR728w7JgDMrub+S7J2J7RZEREQ0\nElsR4aJklGB0jch5twtawt+651VopykkB3uSvZA8p85FPt9rt/DGwGkJDQAm0nLhzUheyfXerHiL\nRE7TbuFtHfRbLjLLONRH024R9W9mq37+4988c5nBkLxVZkgmIiKiEdqpOj86XwtUkr3JFlGBZz7j\nbN0DgPnU9Kymtm2JSssMzUj2eqWPCsktMxySJ7FQ5EaLRE7VbuGupvYmXCyllkZaSU7ERah/ehwz\nkj2FdHLg4t5WxUAiLvxtg9OMIZmIiGgGeIF3UQsEnubwzWkLWtKvJBfUAmIiNrIK5Vk0zA5siVC7\nhReSh7VbZN2e5Ebb6Un22i0mW0nu/T14PcSnabdY9lZTuxMuljKjW029VdGxVkiFRu1tNbaQjCVP\nVfU+qblMAjV9sN1ivZAOnWlaMSQTERHNgIobkue0Xri80Y/O57Wkf3EvJmKYV+enopLsLZcoRLRb\nDAvJ3tIOb6GIlnQryRMYA3ft0OmDDm493G3tAsDQEXY3MtBukV6G3tFH8gagWNFD5wSckLyR3UBM\nnH8ELKQT/r/b0JlmYLIFwJBMREQ0E8otC0pMIBdYL1xsFDGnzvntB0GLWhLlluUv4FhIT8dCkaq/\nkvr0PcmTrCR/Y6uCWxcyoZC/19rDvDqPZDx5g1dGm0snEI8JHDTCW/dGMeHixYMmbl3IhB4bx/g3\nz1w6gabZhdmx/ceKFR2X5jI3eNX0YEgmIiKaAZWWiblMIrTRbau5FdlqATg9yV1bomb0JlxMQ0j2\nLnL1t1soQokM+0BvmUgrMAIOmExIfux6Fa+5HK5477f2T92+EIsJLGpJHNTddotjrqb+25fL+G9+\n5XN+S02//XobBw0Td6/nQ4+PNSRnwlv3rK6NnZoxsAFwWjEkExERzYBy08JcJlypjFok4olaKDIN\nIdmvJGfCF/cKamHoSmclHoOqxPwRcJO6uHfYaGOrouP+y+GK925r91T9yJ7FrIrDZriSfFRI/v8+\n+3d4ZqeOR16Knn19dacOALh7rbeJsWE2UG1Xz33bnqfg/h17s5J3awZsORszkgGGZCIioplQbpmY\nD/yI35+RrA2pJLsh2etLXkwtTsUykYobmPpHwA1rtfBoqoKmO90iozg/rh93JfnxTact5NV9leTT\nLhLxLGWT2Hcv7nl9zTcKycWKjr942umDfrJYjXzOMzs1AMBdgZDsTbYY9tOHUfNaaryfHkQtN5lm\nDMlERHTTkFLiw1+9PnCZaBZUWuFKcrVdRbvbxpq2Fvn8hYxXSXYCynxqHg2rgXa3ff6HvQGvktzf\nbjHs0p5HU+NoutMt4rE4Mkpm7JXkxzYrEAL4pku9s1q2hZJROtO0iOWsigN3akZBLUCJKTccA/cH\nX3kZEk64frJYi3zO1Z06lrJqaNTaZmMTAHA5e/nUZz0J741QLyTPzrY9gCGZiIhuIn+338C//OPH\n8b999IlJH+XEKnq4klxuO1VhbwZyv3l3Cka5OV2rqastC6oSQyoR7z1mVo8OyUnFv7gHOC0X4964\n9/hmFXcsZ5ENXJ7cb+1DQp6x3SKJw2YbUkoIIbCUHj4GzuzY+MOvXse337WCN79yCU8NC8m79VCr\nBTDeRSIA/FnY3qzkqOUm04whmYiIbhrXS85/pP/sG9v4q6t7Ez7N8UkpUW5ZmM8MLuCYV6NDsjdP\n2Zuv7IXkQ2Oys5IrrfBKagCoGsdrt/CWiQBOSB5nJVlKicc3K3hNXz/y04dPAwDunLvz1L/3UlaF\nYdlouhcTl9PLQ0Pyp5/awX69jR9/6Dbct5HHVkUfuLzXtSWu7tRDrRYAcL1+HVpCO/LPelQKfRf3\ntio6FrQk0sn4jV42NRiSiYjopnG97FQe1wsp/OLDT0B3Q8m00y1njFaw3cKrCM+logNPOhlHKhEL\nXdwDgJI+2ct7/SuppZSotCvHCsneMhHAGQM3zpBcrBo4aJi4/5Zwxfux/ceQiCVw7+K9p/69vZYI\nr+ViMb04tN3iA198CbcspPGtr1rGvRvO5IqntmuwpY3fe+L3sNPcwUuHTbQ79kAl+dnys7hz7s6h\nFyRHLacqiAmg6r5Rm6UZyQBDMhER3USul1pQlRj+33/0Wlwv6fgPf/ncpI90LGW3pzPYbnFUJRlw\n+pK9kLyYWgQw+dXUFT28klrv6DBt8xjtFnF/mYjzsYamOb6Le49fd/68+yvJj+0/hnsW7znVjGTP\norua2ptwsZxejtyO+OxuHV9+sYQfe+NtiMcE7ttw/syeKtbw19f/Gv/+a/8eH3n2I4HJFr3xb7a0\ncbV8FXct3HXqc55ULCaQTyf8douo5SbTjCGZiIhuGptlHZfm03jTKxfxztdfxm9+7gU8u1uf9LGO\n5P04/SSVZMDduudVktNuJXnSIbllIX+CRSIeTVX8EXDA+CvJj29VkYgL3LPeq85atoUnD5/E/cv3\nn+n39irJ+4FZySWjBMsOr3T+4JdeQjIeww+/3rl4t6AlsV5I4cliFR94+gMAgKcOn8LTO3XEBHDn\natZ/7WZ9E02riXsW7jnTWU9qLp1ApWVBSokt9///ZgVDMhER3TSul1u4Zd4ZH/YL33MPsikF7/vw\nR2GXX57wyW6sElFJLhtlpOIppJXhoWNBS/o9yRklAzWuTjwk1/raLbyK+HEqyc1Ae8x5Xdz762f3\n8cL+YPh+fLOCu9fyUJVeP+2zpWfR7rbxmuXXnOlrruTckNy3dS9YTW62O/jjv93C975m3V9lDQD3\nbeTx6O6T+OrOV5FW0njy8Ek8s13FlUUtdDny6ZLTO333wt1nOutJFTJJVHQLNb2DptmdmUt7AEMy\nERHdRDbLOi67lawFLYlf+O578M8P/nc0f/sfAJY+4dMN58069mYfA850i2GTLTzzmV4lWQgxFQtF\nKroVXkltOpXko0fAOZVkKZ012+d1ce9//tCj+Nk//Lr/dQDAtiUe3xzctPfo/qMAgNcuv/ZMX3Mx\nqyIeE9ipOv8GvVnJwZD88KNFNNod/OOHbgu99t6NAnbEp5FW0vjJV/8kSkYJT++/jLvXw/3IV0tX\nERdx3DF/x5nOelJz6QSqLdOfbDEr498AhmQiIrpJ1A0LlZaFWxYy/mPvfM0iLosD5JrXgL/6t5M7\n3BG8uc79FdijWhQWtCQOA5MP5lPzEw3JZsdGy+wOzEgGjtdu0bEl2h0bgNNu0bSaoTB7Vp2ujXLL\nxBNbNfzlM73pJ9cOm6gbnYFNe4/vP46VzMrQWdXHFY8JrOZUbFedZRteJTl4ee9LLxxio5DCA7eG\nz3Bp0YSSfwzfsvY9eGj9IQDAtvE87loNr6N+uvQ0XjH3CqhxFeM0l3F6kmdtRjJwgpAshIgLIb4u\nhPhT9+PbhRBfFkI8L4T4kBAi6T6uuh8/737+yvkcnYiI6Pg2y85/pC8HeiJj1ZcAALuxVeCL/xG4\n/pWJnO0o3sW94IW3ilE5spK8qCVRNzow3WA56UpybyV1oJJsHK8nuX/NtpbQ0JVdGF1jpOfzMvev\nfuY5P4AP27T32P5jZ+5H9qzPpbHjhmRvMUlwDNx2VcflhczAZIpn9U8CkLg98d141cKrEBdxxFKb\nA+Pfrpau4u758bZaAG4lWbcCleSLOd3ifwTwdODj/xvAL0sp7wBQBvAe9/H3ACi7j/+y+zwiIqKJ\nul5y+le9nmQAQPkaAOD/jP8UkL8EfOyfTWXbRbllQkvGkVR6/9kut8tHBkuvdzU4Bm6yIdk5RyFi\n3vNR38tawQlXXrU1m3AupY1yNbXX1vKWOxbx+GYVn73qVHIf26wglYjhzpXeRbgD/QBbja2RheS1\nQsoPyd4kkmAluVgxBvp5W1YLn3r5YxCtb8LWgdNzvqxeQTy1FbpgeKAfYF/fH3s/MuD8XVd1C5vl\nFpJKDEvaeCvZZ3GskCyEuAzgewH8tvuxAPAdAD7iPuX3AfyA++t3uB/D/fzbxLgG8hEREQ0RVUlG\n6UUAwJdaG5D/4NeAw+eAz/7SJI53Q/0rqYFjVpLd0WIH7oWwxdQiSnpppC0KJzFsJXVGySARTwx7\nGQBntjUAP0hmEs6bnVGGZG+F90+89RW4NJfGr7jV5Mc3q/imjQKUeC82Pbb/GACMrpKcT2G7akBK\niUQ8gTl1Dgctp5LctSV2aob/Z+D5k7/7E1TNKm5PfDee2nY276XlFcTTm7gcCNRXS1cBjP/SHuBU\nkqUEntmpY6OQQiw2O5HwuJXkXwHwLwHY7seLACpSSm8WyyYAb8fhJQDXAcD9fNV9fogQ4r1CiEeE\nEI/s7w/fT05ERDQK18stZJJx/8f2AIDyizDjWex2NVTW3wo88G7gv/4HYPORyR00Qrll+mumAWf0\nWN2qH1l9XeoLyQupBZi2OdJgeRIVv20kPALuOBvg1vNO6Nt2L7d5leRRXt7zKu7LORU//e134LHr\nFfw/X/hDPN3+g4H5yI/vPw4lpuCexdGMVFsrpKBbXf+NxHJmGXstpy96r26ga8tQP68tbfynp/8T\n7lu8D29YewDPbNfQ6dpoNzYg4jqKzS3/ud5ki3HOSPZ4rTVPFWsz1Y8MHCMkCyG+D8CelPJro/zC\nUsrflFI+KKV8cHl5eZS/NRER0YDNso5b5vt6OsvXoGdvASCwWzeAt/8fQG4D+MTPTeycUQZWUhtH\nLxIBevN3DxvTMSvZC8mFvukWR022AIB8WkE6Ee+1WyTddosRLhTxLkguaEm88/WXcWkujf/8xMOI\nz38Whfnroec+tv8Y7lm4Z2QX4dYL3psA5/tb19ax09oB4LRaAAi1W3xl5yu4VruGH7/3x3HfpQLa\nHRsvHDSxd+BkqicPn/Sfe7V0FRvaxrH+nEfN+7s+bJoXLyQDeAuA7xdCXAPwh3DaLH4VwJwQQnGf\ncxmA95ZlC8AtAOB+vgBgsoviiYjopne91Aq3WgBA6UV055yRWnu1NpDKA9/0g8Duk8CEWhKiVFpm\neJFI21kkcnS7hRuSm71KMgAcGpP5z3LUxb1Ku3Ks8CaEwPpcr2/XqyTXzdEtg/FmSs9nkkgqMfzU\nt70SJpw2hi+U3u+3qVi2hScPzr5EJGh9LtxOsq6tY7u5DQD+ZIj1wKW358rOtsg3b7zZ37z32at7\nKFcWEReJUEh+pvTMRFotgPDf9YULyVLK/1VKeVlKeQXAfwfgL6WUPwbgrwC8033auwE87P764+7H\ncD//l3JSzU9ERESAv+0rOP4NdheovARl8ZUAgN2aOyUhvwF020BrsvOEg8pNM7yS2qskHxGStWQc\nqhLzK8n+amp9QpVk3YIQQC518nYLwOlL9totVjIrAIDd1u7Izldumkgn4kgnnSUcP/zgZSiJFmCr\neLr8OD63+TkATkA1usaZl4gErfddTFzT1lBtV9GyWv73HAyZxUYRaSWNOXUOr1zWoCox/Je/3QIQ\nx63ZO/yQ3LJaeKn20sRCciEwkeXyRQvJN/C/APgXQojn4fQcv899/H0AFt3H/wWAnz/bEYmIiM6m\nqluotzvhSnJ9G+iaSK86IXmv7lRbkVt3P18c8ymjdbo2akYnspJ8VLgUQmApq/qb3BbTTkgOjhYb\np5puIacqiAcubx23kgwAa/m0HyIXUgtIxpLYae6M7HylphXqWVeVOFRVxxtX3o5bc7fiV7/+q7Cl\nPfJLewCwnFURE72e63XN+Xe409xBsWIgqyrIB95cFBtFbGgbEEJAicdw91oOz+w4VfXXrrwaTx0+\nBVvaeLb8LCQkK8mncKKQLKX8rJTy+9xfvyCl/GYp5R1Syh+WUrbdxw334zvcz79wHgcnIiI6rusl\nb7JFoJLsTrZILL0C+ZSCvWAlGQBq2+M84lBei8JpKsmAc3nPqyTPp+YhIHBgTCYk97eNdO0uau3a\niSrJe/U2Ol3bab/I9loSRqH/gqTZNWF0W3jD5dvwM6/7GTxXfg6fePETeGz/MSynl/0gOwpKPIaV\nXCrUkwwA281tFCv6wHzh7eY21rO9r3+v23KxklPxwNqr0bSauFa7hmdKzwCYzGQLINx/PkszkgFu\n3CMiopvAZtmZkRyqJJedkIyF27GaT2G3Np2V5IofkgcrycepwC5mVb8nORFLYD41H1p3PE4V3QpV\nFutmHRLy+CF5LoWuLXHghv41bW2kIbnUNEN/zt4Fx/nUPL7rynfh7oW78etf/3V8fffruH/5/oHF\nHmcV7LkOheSq7l/s8xSbTiXZc++Gs2HvrrUc7lu8DwDw5MGTeKb0DApq4cxbAU8rEY8hqzpX2C50\nJZmIiGgWXXdDcqgnuXwNiClA/jJW8yns1d1Kcm4NgJiaSvKwldS5RA6J2I1nCwPO1j2vkgw4bQqT\nareo6tbAZAvgeGEfCPbtOj8ZWMuMNiRXWuGQXDacNyMLqQXERAw/+7qfxVZjC8VmcaT9yJ5gz/Vy\nZhkxEcN2cxvbFSMUMJtWE9V2FRvZXki+zw3Jd6/lcHvhdqSVNJ46fMq5tDd/98gD/UkU0gksakmk\nEvGJneE0GJKJiOjC2yzryKWUUEBD6UWgcAsQV7CSU3uV5HgC0JanppJcbg5WkktGCXOp41Vfl3Iq\nDhumP5lhKb00uekWLWtgkQhw/JC8lu8bk5Zdx35rH5ZtjeR8paYZ6kn2QrLX1vLWS2/F61dfD2C0\n/cger+daSgklpmAls3NpsbIAACAASURBVIKtetEZnxZYJFJsOP82gyH53vU83vzKRXzXfWvO/OaF\ne/DY/mN4rvzcxFotPHOZBC71T5aZAQzJRER04V0vtcLrqAGn3WLhdgDASj6F/Xq7t4kuvz41leRy\nYCyZ5zjb9jyLWhKme/kPcC7vTbLdotC3SAQ4+gKip38CxLq2DgnpL904C8v9Mwq9GWn32i0A5yLk\nL7zxF/ADd/wAXr306jN/zX7rhRRaZtf/u1rX1vFy1Q3EgUqyVz0P9kSnEnH85598CA9eccb83bt4\nL75x8A2YtjmRJSJB73rTbXj3m65M9AynwZBMREQX3mZZH5yRXL4GzDsheTWvwuza/rIL5Dac6RdT\nwN9Sp4UrsEctEvH0Foo4lfKl1BIO9cOxr6aWUqLa15PsVZKPG5LnMgmoSgw7XruF22e73Tj735X3\n57wQ+HP22y3UBf+xV82/Cv/mLf/myDXap7HWt3p7TVvDtrtQJDgjeavhrKa4lL2EYe5bus//9T0L\no9kKeFr/7RtuxQ+9/vJEz3AaDMlERHShSSmdbXvBfmS9AuhlYP4KAGAl5wSQXa8vOb8O1Kak3aJl\nQokJ5FSl91i7fOxgueivpnZnJacXYXSNsa+mbrQ76NoSc+nBzYHHbbcQQmBjLh05AeKs/Ip9X7tF\nXMSRV/Nn/v2Pw5v+EBwDV2rvAbBD2/a2G9tIxBL+SL8o3uU9Na7iSuHKuZ35ImNIJiKiC+2waUK3\nurhlyGQLwKkkAwhMuNgA9BJgGeM8aqRyy6m+Bi9enaTdYqCSnF4CMP5Zyd4ou/6e5JiIIZfMHfv3\nWcunQpVWACOZlVxqDra1lIwSCmoBMTGeuLTmTrAITriwZQdCafhVZsCZbLGurd/wXLflb0M2kcWd\nc3dCiSlDn0fDMSQTEdGFdr3kjX/rm2wBBNotnADSm5XsjYGbfMtF/2xhvaPD6BonryQ3e5VkYPyr\nqb12hkKg3aJm1pBP5k8UQp0JEM7fU1pJY16dH0kluRLR+102yv4q73FYyakQAgOV8vl8C6rSmwxR\nbBRDl/aixEQMP/man8SP3vOj53fgC45vLYiI6ELbLDs/ug61W7iLRDB/GwBgOedUWwe37m371eZJ\nKbdOt5Las+CGPq+S7K2mnlQlea6vknzcsO9ZK6SwWzPQtSXiMTGyWcmlpteTHJ5Hfdw/51FIxGNY\nzqq9EXdupXw+3wg9r9go4u/d8veO/P3+yTf9k9Ef8ibCSjIREV1o14ctEtGWAdX5MX8qEUchncDu\nwNa9yfclV1pWqJLsTVw4brhU4jHMZxI46Gu3GPeEC7/dou/i3nH7kT3rc2l0bOmH/nVtfSTtFuWI\nedRlo3zsC5KjEqyUexv1MpleSDY6Bg6Nw5Fu+6NoDMlERHShbZZ1LGhJaIGLb8HJFp6VnIq9ga17\nk2+3GFZJPkkbwFJW9ReKzKlziInY2CvJ/pSOwMW9art64kryer5vDFx2NCG51DShJeOhhRclozTW\nSjIArBfSfk9yVslC2iqUZNX/vFc1v9FkCxoNhmQiIrrQrpdag+PfStf8yRae1XyqN90iVQASmYnP\nSpZSotyyIldSnyRcLmZ7W/fisTgWUgv+yuVxqejRmwNPWkleKwxOgGhYDdTN+pnOV26aockWlm2h\nZtbG2pMMON+fF5LrRhe2OQcZL/uf98bdsZJ8/hiSiYjoQtss6+FFIh0TqG0O9Bqv5AOVZCGcavKE\nt+7pVhdmxw63KJywJxkAFrOq324BOC0Xk+hJTiqxUKX2VJXkvoUi/qzkM/Yll/pWUnuLTsZfSU6h\n3u6gblgoVnXIzhwM2WuNKTYHt+3R+WBIJiKiC8u2Jbb6F4lUrwPSjmi3SGGvbgS27m1MvJJcbg2u\npC63yycem7akJUMheTG1OP6Q3LJCl/ba3Tb0jn7iSvKClkRSiYXGpAFnHwNXblmhSrJXaR93SA4u\nFClWdNjWHGqdff/zxUYRcRHHSmZlrOe6GTEkExHRhbVXb8Ps2rgcOdniSui5q3kVVlf6wXQaKsll\nf3ZvuJLs9RUf11JWRc3owOzYANzV1GMeAVc940pqjxAifLnNWyhyxq175aaJhcyNt+2Nw7o7K3m7\naqBYNSCtOdStCoyO8/0Wm0WsZlY5+3gMGJKJiOjC2hw22QIYaLfwZyXXAxMu6jvAmNc3B/mX3foq\nyScNlovuQpFSYFbyuFdTV1rRK6lPWkkGwgtFFtOLUGLKmdst+nuSvZA8iXYLoFdJFl3n79qrlG83\ntv2pF3S+GJKJiOjC8mckB0Ny6UXnUl52NfTclVzf1r38BtA1gdZ4K65B5SELLk4a3Hqrqd0xcKkl\n/2LauFR0C4X0YM/vSQM/4ATJontxLyZiWMucbVay2bFRb3f8mdLA5NotVgPTO7YrOhZUp63C+/62\nGlucbDEmDMlERHRheVVhL3gAcMe/XXEu5wV4z/FnJXtj4CY4K7miez3J4QrsSWf3equpvZDsb90b\n46zkWl+7hVdJPk1IXiuksVszYNtOJfysY+D8bXva2aaIjEJSiWEpq2KnpqNYMbAa6Lm2bAv7+j4n\nW4wJQzIREV1YBw0TSSWGbGhG8osD/chAb+vefj1QSQYmOiu50vTGpoUryXOpkwW3pay3dc/5/fyF\nImPsS3bWa4+m3WJjLgWrK3Ho/vmsa+tnqiSXhlTsC2phIr2/64UUihUDxaqO2/LrEBDYbm5jt7kL\nW9qcbDEmDMlERHRhHTTaWM6qEF7VWMrIRSJAxNY9v5K8NZ7DRii3LGjJOJKK859rKeWpKsleT/Jh\nM7x1b1wTLqyujabZDU23OEu7xVq+17cLAKuZVey19tCxO6c6X9ldST2v9c5XMkpj37bnWSuksFXR\nsVM1cGkui+X0Mrab2yg2OP5tnBiSiYjowjpomH4VFQDQ2AOsVmQlGXAmXPghObsKiNhEx8A51dfe\n+etWHV3ZPXGw1JJxqEoMB24leTHltFuMKyRHraSutqtQ4ypSSmrYy4byJkB4fcnr2XV0ZffU34/X\n+73Qd3Fv3ItEPBuFFF7Yb6BjS2zMpbGWdXqu/RnJGkPyODAkExHRhXVQb/tVVAC91olC9MUnZ1ay\n224RVwBtZaJj4MotM1TdPM0iEcAZm7YUWCiSV/NQYsrYepK9KR39PcmnabUAwrOEgcAYuFO2XHhT\nPxbOeEFyVNYKabjt1tiYS2Fdc3quvTF33gIVOl8MyUREdGEdNtuDlWTACb8RQlv3ACC/PtFK8ihW\nUnuWAqup/3/23jw8srs8075P7buWKu1SS+rF7e7G7sULGNsYcMAYB5tJCCRkIEMWyEICQzIfTEiG\ngWRIAkzCNzCZDybwEcKQsNsGzGLA2Bi8td3ttrvbvUutXSpJpVKpFtVy5o/fOacWLa2lpFK33/u6\nuMp9VMuvJNN+6tHzPq9Ns9Hoadx0J7nUFY9lYmseigv7XTjtWtW6kqcXy35naieSzRo4gPZ6r8pc\nJ0YYTAzS7G3GZXct82ihWohIFgRBEK5ICgWdycS81ewAQGJM3QYWF8ktoYqte8H22g7uVcQtrAUX\na4gBLLaaerMG92ZSSoRWLhNZq0i22TRa6zyMGnGL9a6mnkrOE3Q7rOx3QS+sKftdLVpLRHJbnZdW\nfyvzhXlOTJ6QjuRNRESyIAiCsCy6rvOD46Pk8oVaH2VVzKSy5Ap6edxiznCSlxDJzcGKrXuhtppW\nwCkneeEWuNW2W4ByX00nGQyRvMlxi/oqxS0A2kJey0n2O/2EXKE118BNz81T7y8X8AW9ULNMsukk\nB9wOQh6H5ZSfjZ2VPPImIiJZEARBWJajAzHe9S9P860jtWt5WAtWk0Nl3MJdB07voo9ZtCs5HYNs\nakPPuhj5gk48nV0QUQDW5HBGgm4m5zKWSx72hDd/cK9KTjIot9UUyYCV210L08nsgjwybP4iERPz\n38O2Oo9aw13SiyzNFpuHiGRBEARhWYZjSog8dGq8xidZHROzyjVtqoxbLOEig2q3AIrDe2ZXcg3c\n5JlUFl0vXyQynZnGZXPhdSwu8pcj7HeRzevE06omLeKNMJWeoqCv/zcEn/jBKZ65OL3k148Pxwl6\nHIQMkazrOvFMfH1Ocp1aTW2K/vV0JasBydpv2zPxOO2E/S7a69XPWURybRCRLAiCICyL6ar+7HSU\n7GUUubC2y5WJ5PFlRXJzcImtezXIJS+2kjqWjlHvqS/2Pq+Cxbbu5fW85U6vlblMjk8/dJZP/ujM\nol+fzxX44fFRXrO3BbtNnTuRTZDTc+tyktvqPMznC1YzRat/7aupp+bmy53kzNqz39XiHTf38Kbr\nOgG1cMX8YCTb9jYPEcmCIAjCsowZq51nMzme6lMOG/f+EZy4v4anujSTicXiFss7yebWvXFTJFtO\n8uaLZHNVcn2Fk7zWYbJwxda9aq2mHjGG5x49M1HcVljCL85Fiadz3HVNUdytZ9ueSavRlWw1XATa\niM/HmcvOLfmYh06N86pP/JTZdLbs+vRcuZNsxS1qNLgH8O5X7+IN+9W/f5qmWcOJHYHF6wuF6iMi\nWRAEQViW8XjGqtz66akJyGXg6JfgsU/X+mjLEk3MY9PKnVgSE2pJyBJ4nHbqfc5i3MJykjc/bmFt\ngVvESV4LppNsfnio1kIRU6QWdPjOMfV9SswniM/HAXjguRGCbge37IpYjzFfc71Ocunrmw7rcrnk\nHx4f5UJ0jl+cK34wSGfzzM3nyxaJ1DpusRjm+5OO5M1DRLIgCIKwLGPxNN1hHy/tDfOTF8Zh1hAh\nA08q0blFiSYyNPrd2Ixf8ZNNQWZmWScZVMOFFbfwhMAVqImTvFjcYjozTaN7bREA00k24xbmaur1\n1sCNGJn1SMDNvUeVSP7gox/k9x/8fbL5Aj88McYv7W3B7bBbj3lo4CEcmoMDTQfW/LqVQ5YrWShy\n5KJysB85Xfz31mreqGgRCTgDW6qPuLeulzZ/Gz6nr9ZHedEgIlkQBEFYlvHZDC0hD6+6upmz4wnG\nhs4bX9Hh9PdrerblWHQlNSzrJIMSX2OlC0WCbRviJH/xsT6GY0u3ZljizV8u3tbqJJuZW3M1tSWS\n1xm3GJ5JoWkqQ/vsQIy+6BxnY2d5LvocXzv2JLFklteXRC0KeoHvX/g+N7XftOb3AipGo2nFIctL\ndSXPZXKcHpsF4GdnlJOdK+T4/PP/BLbkltm2txTvPvBuvnjnF2t9jBcVIpIFQRCEZRmLp5VI3t0E\nwKnTp9QX7C449b0anmx5oomMlTEGLrltz6Qp6C7P1m7A1r2xeJr/ct9x3vuVo8XFJRVE5zI4bBpB\ntwNQgi4+H19zTtZht9Hgc1rVeAFnAJfNtf64RSxNJODmVw51oGlw75FBK/Lwbye/ScDt4NaSqMXR\n8aOMzI1wZ++d63pdh91GJOC28uNN3ibsmn3JrXvPDc1Q0OFVu5u4OJWkLzrH4bHD/OvZz+BqeLK8\n3SIzteVEcsAVkKjFJiMiWRAEQViS5HyO2XSO5pCb7U0BesI+hgYMJ3nvG+HcT2A+WdtDLkE0obLU\nFpfYtmdibt0rFDZu654pwp+8MMXXnx5c8PWhWIp/feIih7obrCaLmcwMsLZFIiaRgNsa3NM0rSoL\nRYZnUrTXeWir8/LS3kbuPXaK+cI8Ds3BhfTPeNXVjXicxajFAxcewG138+ptr17X64Kq7DPjFnab\nnSZfE2PJsUXve3RARS3e/epdAPzszARHx4+qx/pPlWWSp9Nrj7UIVw4ikgVBEIQlGTdiBy1GNdqr\nrm4mNTmI7vDCgd+AXArO/7SGJ1yapVdSXyJuYW3dM7bThdqUSC5Ur/5uoqR546MPnGRqbp6B2QEm\nkhPkCzrv+8pR8gWdj7/pWusx61kkYhIOuMpWU4e9618oMjKTps1omrjnQAcXjWjKS5vuAHuC3m3F\nDwG5Qo4H+x/kts7b8Dv963pdUP9elkZjmn3NS4rkIxen6Q77OLStnq5GLw+fjnJ0whDJvn6cjuLz\nbMW4hbD5iEgWBEEQlsR06cwhqVftbqZJnyTlaYbuW8AdglMP1PKIizKXyZHK5omUxi3mJgAN/JEl\nHwfQbLzXYsNFOxRykKzedrqo8dwf/XfXMJvO8bffO8mfPfxnvOMH7+Aff3qSJy5M8aG799EdLgpJ\ns3FhPU5yuMRJBiWS1zO4p+s6I7EUrUbTxOtf0obLrRxvLfEy9Lyf/swj1v2fGHmCqfQUr+99/Zpf\ns5Rmw/U3afG1MJ5cfOnN0YEYB7pUx/QrdjXx2Llxnh0/RoOjG00rcHLmsPWepjMikgURyYIgCMIy\njBliztxE99LtjbTbYozpjeBwwc5fUsN7hXwtj7kAq8Gh0kn2hcHuXOJRCvO9Wg0XIWPorIpb98zh\nuZt3RvjdW7fz1cODXIwP0R/v5x+f/Udef00rv2YskgAl3L504ks4NAc9oZ41v25TwF3mJEe8kXU5\nyfF0jrn5PO31SiTX+ZzsbFcb/Z44DV3OW3hk6KfE0soFf+DCAwScAW7pvGXNr1lKS8hNNDFvLblp\n9jUvKpJHZlKMxTMc6FIfMG7d1USKURLZWba7Xgd5Hz8f/hkAs9lZcoVcTReJCFsDEcmCIAjCkphD\nUaa76nbY6XbGOJ0KqoGzq+9SDu3Q07U85gJMERqubLe4RB4Zilv3ypxkqGouOZrI4HXa8bsd/Mnt\nO2mvd5LIzoDuwtHwCG+/zV62Ve/LL3yZnwz8hPde9951DW+F/S7i6RyZnPpQE/aEiWVi5Nf4IWfU\n7CiuK67J7mzKoBdcTM06eNNVbyRXyPG9vu+RyWf4ycWfcPu223Hb3Us95aowf8NhZrxbfC3MZecW\nLBQ5alS/mSL55TvDOPz9ADizO3Bl9/Do0KMU9EJxkYg4yS96RCQLgiAISzIWT+N22Ah5VMMCuk5D\nfpIL83WcGU8oJ9nmgBe+W9uDVmC6pU2VTvIKRPLCrXsb4SQXmzd8Lgd/dqcS4pnx26lzh/nYMx8h\nm1cVcMejx/nE4U9wW+dtvH3v29f1uuaKbnOVc8QbUcLQWMO8WoaNbXumkwzgdM9ArgGv08FbD97E\n7obd3Hf2Pn42+DMS2UTVohagOq2h6Po3+9TPtzKXfHQghstuY297CICQx0lTZARbIUAq1UA91zKV\nnuLk5MktsW1P2BqISBYEQRCWZCyuOpItVzM5iV3PMqo38NAL4+Cth+6bt1wV3JJxi0sM7UFx6541\nEOZvBs1WdSe5tMN5d4f6/v7a/kP89S0f4sz0Gf7p+X9idn6WP3v4z4h4I/z1zX9d5i6vBWuhyGz5\nauq1Ri7MRSKlTvJYcoSeug7++PadeF127t5xN8cnj/OZY5+h0dPIjW03ructlNFSkR83RXJl5OLI\nQIy97aGyhSaap5/5uS4uTCRpd+9HQ+ORoUes7LfELQQRyYIgCMKSjM+mrYwuYLmpWV8rJ0fU2mGu\nvguip2DyXA1OuDjmcJpV66XrK45bgHIorYEwu0OJ6yp2JUdny5s3TJH664f28cquV3Jn75189thn\nee9D72VkboSPveJj6xrYM2k1ROWo4byud6HIyEwKm1Z0dEGthb6hazt/+MqdANy1/S4cmoMXpl7g\njp47cNgc63kLZTSHyl3/Fp/6EDQ2V3SSc/kCzw3OWFELUO0VM7lh8qluhmIpmn0Rrolcw6ODj0rc\nQrAQkSwIgiAsyXg8Y+WRActNddS30zdp9CPvNpZCbKGWi2giQ53Xicth/GcuMwu59IqcZNj4rXvR\nRKasecMUyaZo/cCNHyDoDPLk6JO8++C7Odh8sCqv216vHF9z01/Ysz4neTimFs047Or7nMqlmM5M\n0+5vt+4T9oa5pUMN6lUzagEQ9rux2zTrZ7WYk3xqbJZUNs/BbUWR/OzEswB48jsAaPA5uaXzFp6L\nPse5GfVhT0SyICJZEARBWJKxeNrqSAYsJ9kX6aJ/0hiOqt8GLdfA6R/U4ISLUxlnWOlKapPmoKeY\nSQYItVfNSc7lC0wlF3eSzfhDo6eRT9z2Cd557Tv57Zf8dlVeF9Tgnsths0SyKcrXHLeYKda/Adam\nvcrhwj848Af8h33/gf1N+9f0Oktht2k0BYoLRTwODyFXqCyTbC4RKXWSn514Fofm4OWdBwBo8Lt4\nRecr0NH53oXv4XV48Tq8CC9uRCQLgiAIi5LIqHqvBXELzUZjSyfTySwzSTVcRuf1MHa8NgddhGhi\n3hpSA4qLRPxNK3p8c8jNRCJTsnWvek7y1Nw8ug5NJSJ+IjVByBXCZS9eu7HtRv744B9j06r3n2qb\nTaO9zsOQIZJ9Th9BV9ASt6tlZCZNe0ke2VwJ3eZvK7vf3vBe/vT6P113pnoxWkJuq6oQFtbAHb0Y\no9HvYlujr3ht/Ch7wnt45VXK8W70u9jTuIewRy1XkaE9AUQkC4IgCEtQuUgEUELR30x3k3Ll+kw3\nObwTUlOQnNrsYy5KNJFZ2GwBK49bLLZ1Lz1TlRXcE4sMFU6mJi1Xd6Npr/daTjJAR6CD4bnVfwDQ\ndZ2RmRRtJU7yyJwhkgNtSz2s6jSHyl3/Fn/5QpHSJSIA2UKW56PPs79pP7fvaWFnc4BrO+uwaTYr\nFiJRCwFEJAuCIAhLYNVqlTnJIxBqoyeiNsGViWTYMsN70dn1xS3MDwZWLrmKXclmh3NlJrnJuzKX\ne7101HstJxmU6zucWFwk67rOP/+ij//0tWdVL3YJsWSWdLZAW32Jkzw3gk2zWdngzaAlVIxbQPnW\nvXg6y9mJRFnU4vTUadL5NAeaD9AUdPOj993GvvY6AG7tvBUQkSwoRCQLgiAIizIeN7ftVQzuBdut\nX133m8N7lkg+u5lHXJT5XIF4Olcet5gbV33O3pWJH6s1wWy4CBkiuQpdyeZK6spMsplH3mja672M\nz2aYz6ktdR2BDoYTwwtEcDqb50+/9iwfuv84X3t6sDioaWB1JFc4yU3eJpy25bcaVpOWoIfpZNZa\nkNLsayaaipItZDk2MIOul+eRj04cBVg0H31T+03YNbvUvwmAiGRBEARhCSwnOViRSQ614XHaaa/z\nFJ3khm7Q7FtCJE/OLdGR7G8G28r+s2dt3TOd5FA1nWTzfMrp1nWdyfTmxS066r3oevHn2+ZvI5lL\nMpOZse4zMpPizZ95jG8+M2Stx366f9o670B8oNiRXOEkV+aRNxrzA81ESVeyjs5kapKjA+rM+0tF\n8vhRWv2ti24uDLlCfPjlH+ate966CScXtjoikgVBEIRFGZ/N4HPZCbiNXtv5JKRjlmDsDvvpixoi\n2e6Ehp4tIZLNRRkL4haBlccZFjjJwept3YsmMrgdNuv7OpedI5VLbWomGbAiFx2BDvXnuSEAjlyc\n5g2f+jnnxhN89m3X8Xe/ei1Bj4On+6eZnZ/lfT99H6//1ut5YuRJ9XylTnJiZFPzyFBcmW5GY6yu\n5OQYzw7OsL3JT5236GwfnTjKgaYDSz7fPTvvYV943waeWLhcEJEsCIIgLMpYPF2+bc90UY18bk/E\nV4xbgIpcbIFMctRwkhe0W6wwjwzgdlRs3XMHwB2qWiY5EnBb39fKjuSNpqOhvCu5PaB+nmYzxUe+\ncwKXXePeP7qZ1+5rxWbTOLitgSeHnufXv/PrPDTwEDbNxvPTT+OwaZZjX9ALjCZHN91JbrFc//LV\n1OPJcU4Mx628MaiKutG5UQ40Ly2SBcFERLIgCIKwKOPxzMKoBaimB5STPDk3Tzxt1MCFd8LUOSgU\nNvmk5ZiZ3/J2i5Vv2zNpCXrKBsIItlXNSV5skchmZZLNNoqh6XKRPJQYQtd1zowleO2+Vna1BK3H\nBMNHGQt8nGQuxefv+Dx7GvcwmDxBS8iDzVYU+7lCbvNFsuH6j1WI5P7YCEOxFHvaiu/DzCMv5yQL\ngomIZEEQBGFRxmbTC4f2oOgkh1XDRX/UHN7bAdlkVdzW9VBsjzDiFoWCIZJX7iSDilyMl/TvEmqr\nynubmM2UdSRH00okb1a7hcdpJxJwWYN3IVcIv9PPcGKY0XiaRCbHjuaAdf/7z93PI7FPkU918ad7\n/xeHWg5xsPkgM4WztNUXV0xb9W+bLJIbfC6cds3qSm5wN+C0OTkVHQRgT1vIuu+J6AmcNidXNVy1\nqWcULk9EJAuCIAgL0HXdiFss7ST3RFTDxcIauNrmkicTGbxOOz6XIeBS06DnVy+SK7fuBauzdS+a\nmKcpWN6RDJsXtwCVSx4yBu80TaM90M7w3DBnxxMA7GwqiuTHhh8j4omQHvgdzo4q1/hQyyF0LYs/\nWNxsV4uOZFALUppLXH9N02j2NdMfU/++7i0VyVMn2NWwC6d989o3hMsXEcmCIAjCAuLpHOlsYaGT\n7AqCW/36urvRcJK3mEhWcYbSob3VbdszaTGcZGvrXqgNEqPripPkCzpTc5kF9W8OzUGdu26ZR1aX\n9rryhSLt/naGEyUiucRJPhc7x1WNV7G7pd5quDgQOQiA7jlv3W80obb2bbaTDIbrHy+6/i2+FsaS\n4zT6XVZkSNd1Xph6gT2Nezb9fMLliYhkQRAEYQHWEFSpSI4PF6vQAK/LTmvIU+zPDbaB01fz4T1z\nMM5ildv2TJqDbnKFkq17wTYo5GBuYs1nm07OU9DL6+kmkhM0ehurun76UnQ0KJFsdiO3B4oiuc7r\ntJpB8oU852fOs6N+B4e6Gzh6MaY+NBSCFDIR4voZ6zmH54YJOAMEXcFFX3MjqcyPN/uaieei7GkL\nWgOSo3OjzGRmuLrx6k0/n3B5IiJZEARBWIDZ6lA2uDc7YkUtTLrDvmINnM0GjTu2hJMc9lcM7cGq\nRfKCrXtWV/Lah/eii6ykjqajmxq1ABW3SM7niSXV0GVHoINENsGp8XF2NgcsYTmUGCKTz7CzfifX\nbWtgNpPjzHiCkZkUuVQPI5mTFHTlrI/MjSzaPbwZtFTkxyPeJrLEuLpk+PDk1EkAEcnCihGRLAiC\nICzAdOVaKp3kUEvknwAAIABJREFUYHvZ/XrC/vJNbOGtIJLnaVosbrHKdgurf3dBV/Lac8kTs+WL\nREBlkjdbJHfUGw0XRuTCjEicjw2U5ZHPxdRvBXbU7+C6brWt8On+aYZjafLJHpK5OBdmLgDKqTWb\nMjab5pCHmVSWdFZt3XPo9Wi2LL0tRZnzwtQLaGgytCesGBHJgiAIwgJMV85ykgt5mB1d6CRHfEQT\nGRKZnLoQ3gnTfZDPbuJpiyyW+SUxBg6vlaVeKeZ7n9gIJ7miAm6zmi1MzIUiwxULReLZ8fI88owh\nkut20B32Efa7eLp/mpGZFPlkDwDPjD8D1Gbbnon5szJzyamUeg+R+qK7fHLyJL11vficvs0/oHBZ\nIiJZEARBWMBYPE3Q7cBvbtubm1ANEcFyEdQbXmR4T8/DdP9mHtciZmR+w/4SJ3luQm3bM5eirJDm\niv5d/E1q9fY6nOTiNkD13PlCnqn01KZ1JJt01C++UERzTpeJ5LOxs7T6Wwm4VATj4LYGjlycZmQm\njVNvIuwJc2TsCMmsWmtdu7hFues/HVfvz+OZte5zcuqkRC2EVSEiWRAEQVjA+GzaEolASf1bR9n9\nug2R3Gd1Jde24aLYkbz2bXsmboedBp+zmHW12SHYuq6u5Ggig8tuI+RRHz6mM9MU9MKmxy0a/S7c\nDhvDM0pU1rvrcWpubBUi+VzsHDvqd1h/vq67gfPROU4Mx2mr83Ko5RDPjD9j1b+1+2sTtyjmx9X7\nGZ5UP/+pjBqynE5PM5Yck2YLYVWISBYEQRAWMBbPLL5IZJHBPSjtSjYEVc1E8sLBuLUsEjFprvLW\nvYlEhkjAVbOV1CaaptFR77W27mmahtfWhMM9Y0Ux8oU8F2YusKOuXCQDPHZ+krY6DwebDzKUGOLo\nuNpkt9kdySbFrXvq539uRMmbsaTKo1tDe2FxkoWVIyJZEARBWIBaJFIxtAcLBvf8bgdNQXcxbuFr\nBG/jFhDJFYN7qxzaM2kOua1NbsC6t+5FE/OLrqTebJEM5kKRYlcyuQbcnhnstoXNFibXdtbhsGnk\nCzrthpMM8MCFB4DadCQD1HmduBw2xuNppubmGY/n8drqGE+qZpMXpl4AECdZWBUikgVBEIQydF1n\nPJ5ZGLewORZdyNG7oOFiZ+3jFqaTnM9CcnJdTvJEFbfuRWcXLhIBiHhqIZI9ZQtF0qkQumPK+vPZ\nmPoZlsYtPE47+9rVBru2eg+7G3bjdXh5avQp7Jq9JmIflBPeEnIzFk9zciQOQNjbVBTJky/Q5m/b\n1IUtwuWPiGRBEAShjFgyy3y+QEuwIm4RaFVdyBWUdSWDIZJrs1AkmsjgsGnUeY21w3NKhK52257J\nolv3MjMwP7f8A5c5X6nLbYrkzR7cA+io9zE+myGTy5OazzObCJFjjsS82rpXWv9WyiEjctFW58Vh\nc7C/aT86Oi2+Fhw2x+a+iRJagh7GZzOWSO4Mtloi+eTUSXGRhVUjIlkQBEEow2wIWOAkhxYfyuqJ\n+BmfzZCcN2vgdqiatEyi6mczN8QtRr6g89zgDOGSzO9at+2ZtIQ85Ao6U9bWPeN7sAY3uVDQmZwr\n3wY4mZrE7/TXpJas3ehKHpvJcG4iQWFeid/hORWtORs7S5u/Db/TX/a4Q9sayh5vRi5q1Wxh0mw4\nySdG4jQH3XSGlEhOZpP0x/sljyysGhHJgiAIQhnm8NOCwb3Q4nnTHqsGrqLhYup8Vc8VTWS47q9/\nxEe+fYJcvlD2tUJB5wPfOMajZ6O84+be4hfWuG3PpLJ/1/oerKErOZbKki/o5SupUxM1iyiYNXCD\nsaQSydl6AIYT6r2Z66gree2+Fv789Vdz80517kPNSiTXamjPpDnoYTye4eTILHvaQjT7mplKT/F8\n9Hl0dHGShVUjIlkQBEEoY9zctlcat4iPLBjaM7EaLqIlXclQ9VzyqdFZpubm+fzPL/D2zz/J1Nw8\njB2nMH2R//zN5/ja04O85/Zd/P5thrDLZ+HIF9U/13Wu6TUXbt1bmZMcTWQ4Pjyz4BpAU8XgXtiz\n+VELKF0okubseAJyhpOcGF602cLE7bDzzlfswO2wA3BN5Bq8Di+9od4F991MWkIeZjM5To8pkdzq\nU872I4OPALKOWlg9tQsPCYIgCFsSs/LMiluk4zA/u6STXKyBM5zkxu3qtsq5ZLOu7H2vuYpPP3SW\nuz/9KA9p7yKfThBLv5M/efVbee8v7VJ3zmXga++AU9+F1/zVkme/FGa1mPnBwXqe+NCSj9F1nT/6\nP8/w3NAMT33wl6yFLNHZhfV0k6nJmq1JbjPiEsOxFGfHE2yrbyFhdzOcGGYwMUgmn1nUSa7E5/Tx\njTd8g4ivNo64ifmzyhd09rQFifhUo8nDgw/T4G6gxbe23yYIL17ESRYEQRDKGJlJ0+Bz4nEqp9Cq\nPFvCSQ56nEQCrmINnMsHoc6qO8mD00nsNo0/fOUOvvqum3DlkjiT4xTyeT7j+iT/Uf8iWiEH2RT8\n21uVQL7z43Dzn6z5NZsq4xYuP7jrlq2B+/HJcZ64MEVyPs+DJ1Qm+omRJ/jwM78HtiRNwfLBvVrF\nLdwOO01BtyWSdzYFafO3MTw3bDVblNa/LUdXqAuvw7uRx70kpfGgvUbcAqAv3sfVjVcXc+qCsELE\nSRYEQRDKGJ1J01ZXInhM13SJwT1QueQLZQ0XOzZAJKdoDXlw2G0c6Krna7/RBl+ER6/+IK8JDaA9\n9mkYelpV1fU9Cnd/Cg69fV2vaW7ds+IWoNzkJRaK5PIF/uZ7J9ke8ZPJFbjv6BBvPNhB0BVkOHUW\nZ+gYkcA9AKRyKRLZBE2+tTVvVIP2ei8Xp5L0Tc5x+54WHI4OhhPDSzZbbGVMJ9nlsNEb8TOXK3Zj\n7wlLHllYPeIkC4IgCGWMzKRpqyvJI88YInmZXO+2sI+Bqcqu5DOwTBvFahmcTtHRUBTv4flRAF77\nilvQ7voE/OrnYORZ6P8F/Mpn1y2QTVpCHmuYEVBb95Zwkr9yeIBzE3O8/86recP+dh45E2UykWFP\n4x7q7F246p+x6ukmU5PqfdQokwzQUe/hmYvTZPM6O5sDtAfaLZHc7m+vSevGWjHz47tbgjjsNkKu\nEB67uiZDe8JaEJEsCIIglDEyk6K1TCQPAtqyTvK2Rh8j8TSZXF5dCO+A9Awkp5Z8zGoZiqXoLBHJ\nTPer2/oedXvNm+D3H4Xf+SFc++aqvW5TUHUlW4QWXyiSyOT4hwfPcENPA6/d28IbD7aTL+g88NyI\nWnZhuwWb9yJ98T6gttv2TNrrvKSzqinEFMnTmWmejz5/WbnIAEG3g6DbYS070TTNilzI0J6wFkQk\nC4IgCBbpbJ7pZLbcSY4PQrAV7M4lH7et0YeuF4fraDCaDqYvVOVc2XyBkZkUnfWlIrkPXAG1Ctsk\nvAM6r6/Ka5q0hDzFwT1QTnJiDAr5svt99pHzRBMZ/vz1e9A0jatbQ1zdGuTeoyqa4clcD7rGt899\nG9gaIrnUmd/R5Kfdrz4IXZy9uOI88lZB0zQ+/44b+I+vKQ5CNvua8Tl8bAttq+HJhMsVEcmCIAiC\nxeiMEoOtpZnkmUEIdSz7uK5G9Wv5i2bkotEQyVPVEcmjM2kKOnQ2lPz6P9YP9d2wwQNZzUE3E5Vb\n9/R8sYMZ1Qjyvx85z13XtnHQWLYBcPeBdp7un2ZgKslMwkuIfXzn/Hco6IUtIZLNGrjWkIegx0l7\noPjbgu3122t1rDVzQ09j2QDf63pex1uufgs2TeSOsHrk3xpBEATBYsQQye2VmeRL9AxvM0TygOUk\n96jb6b6qnGtgWonvBXEL83U2kCW37pUsFPnkj06TKxR4/x3lv9a/e7+67/3PDhOdnafHfRsjcyM8\nNfoU0VQUDY0GTwO1wlwosrM5AFAmki83J3kx3nL1W3jfde+r9TGEyxQRyYIgCILFyIwSuVYmWdeV\nk3wJkdwUcON22IrDe06viiVUKW5hxjgsJ1nXlZPc0F2V518OM3piRUmsruRiLvlHJ8e565o2toXL\nB906G3zc2NPIt44MMTmXYU/dTQScAe4/dz/RVJRGTyMOW+2KptorRHLEG8FpU7Ga7XWXn5MsCNXk\nkiJZ0zSPpmlPapr2rKZpxzVN+7BxvVfTtCc0TTuradpXNE1zGdfdxp/PGl/v2di3IAiCIFSLEStu\nYYjk1DTkUpcUyTabRlejj4uTJQ0XDb1Vi1sMTqfQtJJzzUUhm1Rxiw2mJ6LWbveZPdCWk6xE8lwm\nx8Rshqtag4s+/u4D7ZwdT5DN67QGg9zRcwcP9j/IwOxATaMWAA0+J++6bTu/ekj9fG2ajfZAOx2B\njsuq2UIQNoKVOMkZ4NW6ru8HDgCv0zTtZcDfAf+g6/pOYBr4HeP+vwNMG9f/wbifIAjCiwpd1xkv\n7da9TBidSVPndeJzGe7mzIC6vUQmGVTk4mJpDVxjb9WcZLMj2eUw/rMVM5otNsFJNqMk/eYHAH8T\n/OHjcOCtQFE894T9iz7+rmvacNhUbrop6ObuHXeTyqV4cvTJmotkTdP4z3fu4ZrOOuvarR23cvu2\n22t4KkHYGlxSJOuKhPFHp/E/HXg18HXj+j8DbzT++R7jzxhfv12TNTeCILzIeKpvmhv/24/56ani\ncBeFQu0OtELW0pFssq1RdSXrZjdyQ69yW7OpdZ9rKJasyCP3qdtNcJI9TjvtdZ6ik2yzQfMetX2P\nonjuDi/uvDb4Xbxyt1oYEgm4Odh8kM6A+n6GvbXrSF6K99/4fv7TDf+p1scQhJqzokyypml2TdOO\nAuPAg8A5IKbres64yyBg2gwdwACA8fUZYOv9LSAIgrCBnByJA/DRB06SyxcgNw9/vwd+8ekan2x5\nRuOpCpE8qG5XIJK7Gn3MZnLEkll1oYrDe4PTqfJmC0skb061V3fYT1/pRsESTPHcvYSTDPDm67uw\n2zR6In40TePuHXcDtW22EARheVYkknVdz+u6fgDoBG4E1t3KrWnaOzVNO6xp2uGJiYn1Pp0gCMKW\nwhxgOz2W4OtPD6p4QGIUHvrooosotgojsXR5/Vt8EOxu8F1azHUZTq/ZRFGtGrhcvsDITNpqYgDU\n99MXAXdgXc+9UnoivmLcooK+6BxNQTcB99IDeK/d18ozf/Ea6z28YccbcGgOuoJdG3JeQRDWz6ra\nLXRdjwEPATcB9ZqmmX8jdALG7+QYAroAjK/XAZOLPNdndV2/Xtf165uaare3XhAEYSMYmE6ysznA\noW31/P2Dp0mPn1VfyM7Bjz9c28MtQTqbZ3JufqGTHGpXEYNLYDY7WLnkKi0UGY2nyRf0mtS/mXSH\n/UzOzRNPZxd8rW8ySc8SUYtS6nzFZSydwU6+/e++zT0776nqOQVBqB4rabdo0jSt3vhnL/Aa4CRK\nLL/JuNtvAfcZ/3y/8WeMr/9EtwJqgiAILw4uTqXY1ujjg3ftYXw2w+OHD6sv7H8rPPuvMPh0bQ+4\nCONxtXq5dZUdySZdDRUi2dcI7tC6neQF9W+wafVvJuZQ3sVF3OT+yblloxZL0RnstOrWBEHYeqzE\nSW4DHtI07RjwFPCgruvfAd4PvE/TtLOozPHnjPt/Dggb198HfKD6xxYEQdi66LrO4FSSrgYv13U3\n8rp9rfSfO0HB6YM7/w78zfD9D6iu3y2E2ZHcXha3WLlI9rsdRAKuYleypim3d52Z5EFDJFsrlAt5\n5XBvwtCeSU9ECfQLFbnk5HyOsXhmRU6yIAiXF5dsMNd1/RhwcJHr51H55MrraeDXqnI6QRCEy5BY\nMstsJmetan7/nVdz/n+MMmZvo80Tgtv/C9z/bnju63Dt1vnrckFHciEP8eEV1b+ZdC1WAzd2fF3n\nMkVye71xrvgQFHKb6iQXa+DKRbKZUza7lAVBuHKQjXuCIAhVxhxcM0Vyb8TPNb4pnks2cHZ8Fg78\nJrTthx99COYXb0yoBQtE8uwo6PkVO8mwSFdyQ6/KDxfyaz7X4HSSlpAbt8OuLkwbHcmb6CT7XA5a\nQm76KuIW/ZfoSBYE4fJFRLIgCEKVGZhSzqeZ0aVQoCk3Sn+hhfufHVFDcK/7W+WIbqFKuNGZFEGP\no9jSsIr6N5OuBh/DsbSqvQMVtyhk1XtdI0OxJerfNtFJBiWEK53kvkt0JAuCcPkiIlkQBKHKmE5q\nV6ORoU2MouXSxL2dxUxr98uh+xY49UCNTrmQBYtE4qsXydsafeQLuuVKV6MGbnA6tbD+TbNB3ebW\np/WE/VyIljvJfdE5IgEXQY8M4AnClYaIZEEQhCozMJ2kwecsCidDIObre7gQTRTv2LIXJs9umQG+\n0XiattKhPdNJXmUmGapXA5cv6AzHUgvr30KdYN9cYdod8RFNZEhkcta1vjU2WwiCsPURkSwIglBl\nBqaS1qAXYAlEV9N2+qIla5vDu2A+obK/W4Dh2CIrqd114Amt+DkWdCXXdYLNuWYneSyeJlfQa1r/\nZmLmjksjF/2TSYlaCMIViohkQRCEKjMwlaSzVCRPXQDNTn3bdhKZHNHEvLoe2aluJ89s/iErmM8V\niCYyFR3Jg1C3chcZoDXkwWnXiiLZZlero9foJA/FKurfQDnJmzi0Z2KK5D4jcpHO5hmZScvQniBc\noYhIFgRBqCL5gs5QLFUc2gM1aFbXSU9zPVDStRvepW6jtRfJY3GVIV6QSV5FHhnAbtPobFikBm6N\nXcmDRlOIFbfIptR67xo4yaZj3Gc4yVL/JghXNiKSBUEQqshoPE02ry+MWzT20hsxnUhDJIc6wOFV\nueQaMxo3698qMsmryCObdDZ4iwtFQOWSp/rWlL0eNJpCrMG92EV1WwMn2e920BR0W3GLPqv+TeIW\ngnAlIiJZEAShigxUNluAils09NJR78Vh07hgZlptNgjv3BJO8nDM3LZnOMnZFCQnVx23gMW6knsg\nMwOp6WUf99XDA3zqxyXfi0Ke5Ng5moJuPM6KjuQaOMmgBLFZ+2aK5e5GcZIF4UpERLIgCEIVMUWy\n5SSnZyA1BY29OOw2toV9XJgo6dqN7NwSmeTRykUiM0av8Rpq1rY1+ogls8TTWXVhBTVwD54Y4/3f\nOMZ/f/A09x0dgkIBvvG7vP/0W7jb+3zxjrHNXyRSSk/Yb/0moG9StZjU+aT+TRCuREQkC4IgVJGB\nqSQ2DdrNeIApDI0qtN6w3/o1PaByybGLkMts8knLGZlJE3A7irV18dXXv5mYHxAGVlgD98JonPf+\n2xGu6ajjuu4G/uJbzxN/4L/A8W8yQ5D3zv29Wo8NKtvs8ECgZdXnqgY9ET/jsxmS8zn6onOSRxaE\nKxgRyYIgCFVkYDpFW50Xp93469UUhoab2hNRIrlQMPK5kV2gF2DqfA1OW2R0Jl3RbGE6yasb3INi\nV3JRJPeo20Wc5MlEht/958P43Q4++7br+eRbDvAr/JjQ4U+RP/RbvDn7Idx6Br7xe2q1daxftWXY\navOfL3N4r38ySf9kUpotBOEKRkSyIAhCFbk4lVyYRwZLKPZG/KSzBWtQjrBRA1fjXPJIvLIj2XSS\n21f9XAu6kl0+CLQucJLncwX+4P88w/hshs++/Xpa6zx0TT/Oh2z/xMP5a/mrwm9zKt/OU/v+Avof\nhYc/VrP6NxNTFJ8em2V4JiUdyYJwBSMiWRAEoYoMTCUr6t8ugL8J3EGAhQ0X4a3RlTwSSy2sfwu0\ngMO96ucKeZzUeZ0La+AqnOS/+s4JnrwwxcffdC0Huuph/CR89bfQmnbz7as+yhceV272/EveAvt/\nAx7+O5h4oWZDe1B0kh85HUXXiz9PQRCuPEQkC4IgVIl0Ns/4bMaKGwAqQ2vGDSh26loNF56Qclmj\ntauBy+YLTCQyVal/M1ENF6nihYaesq5kXdf56uEB3nRdJ/ccMF7np38DNgfab36Nv/zVl1lNG10N\nXnj9J9QHivx8TZ3koMdJJODi4dMTALKSWhCuYEQkC4IgVAlz8UVZR/JUX3FwDWgLeXA7bBUNF7tq\n6iSPz2bQdRaupF5DHtlkW6OPwcqu5NlhVS0HRBPzZHIFrumoK95n8jx03gB1ndT5nHz6Nw/xxgPt\nSoi6A/BrX4BQJ3S9dM3nqgbdYT/RhBq0lI5kQbhyEZEsCIJQJQYM59TKJOfmVWyhsSiSbTZN1YiV\nNVwYXclrWLZRDUZn1LmtwT1dN1ZSr10kdzX6GJxOkTcHFM3vgdFzbK2bri9xr2MX1VCewaFtDXzy\n1w8WhyBbXwLvOw7bai2SlTCu8zqp97lqehZBEDYOEcmCIAhV4qK1SMRwF2MXVXNFiZMM0BPxcT5a\n4SSnY2p5Rw0YjlWspE7HIDu3bid5Pl+w1l1b3wOjxWNo2hDJ5rrpVEwtHKlh3nil9BoRC6l/E4Qr\nGxHJgiBsWXRd5wfHR0lkcsWLw0chNlC7Qy3DwFQSj9NGU8AYdquofzPpjQQYmEqSyxfUhfAudVuj\nhgtzkUibmUmeWXtHsokZObGG9xq3q1vjezIUU9ctkWwtCSk6yVuVbkMcS9RCEK5sRCQLgrBl+daR\nId71L0/zrSNGZ+/Uefj86+DBv6ztwZZgYDpJZ4MPTdPUhYpFIia9ER/ZvG45uERq23AxMpPG57IT\n8jjUhXVs2zMxIyeWSPY1grvO+p4MTacIehyEzOUlsYvq9jIQyaY4lqE9QbiycdT6AIIgCIsRS87z\n3757EoDzEwmVk73/TyCXgonTNT7d4lycSpUP7U1fAKcfAs1l9zO7ds9HE6pTuL4b7K5NdZJT83lO\njMzw3OAMPz09Tk9IRxt4AkaOwQvfVneqW7uT3F7vxaaVLBTRNKMGzohbxFLleeTp2q6bXg27moMc\n2lbPbVdFan0UQRA2EBHJgiBsSf7u+y8QS2WJBFz0TybhmS9C38+U0zh1DgqFmm1dWwxd1xmcSnJj\nT0Px4tQFVX1mOssGvU0lXcm7AZtdxREmN7YGbjad5d6jw3z98ADPDc3g05P8sv1xPul6hGv0M/B5\nY8jOF4Fr3gz+5uWfcBmcdhvt9d6KruTtMHwEgMHpFJ0NFUN7riB4G9jqeF12vvmHN9f6GIIgbDAi\nkgVB2HIc7pviX58c4J2v2M7AVJLJkT744V9Az62w79/Bd98H8SGoX3scoNrMpLLMZnILO5LNLG4J\nTQE3fpedvskSARneCROnNuRszw/N8H+e6Oe+o8Mk5/Pc1RTlo50/4Oqpn2DPp9Aje9D2vh/aD0Lb\ntRBsWyDs18K2Rl/RSQb1vThxH+SzDMVSvLS3sfi1WL8a2qvC6wqCIFQDEcmCIGwpsvkCH/zW87TX\neXjP7bv41I/P8Cun/xHdNY/2hv8X4sPqjpNnt5RIXtBsoetKJO+8fcF9NU2jJ+Jf2HBx+vuQz4Ld\nWbVznR6b5Z7/+XOcdo2797fz1hva2f/lQ2gZHfa/GQ69Ha3jug0Rp9saffzo5HjxQuN20PPMjp9n\nNp2jvbL+rWTpiiAIQq0RkSwIwpbic49e4NTYLP/77dfjdzu4NfsoN9sOE3vpX1If3gFOQ4ROnoUd\nr6rtYUuwOpLNldSzoyo/vYTw6434OTY4U7wQuQoKOZXNNQf5qsCzAzHyBZ3vvedWrmoJqs1+mTjc\n849w8Der9jqL0dXoI5rIkJzP4XM5LFd9+uILgKPYbKHrSiT3vmJDzyMIgrAatk6gTxCEFz2D00k+\n+aPTvHZvC6/Z2wLzc9xw8m84VujluW2GoAu2qmG4yXO1PWwFRSfZEH5L1L+Z9Eb8DE4nmc9V1MBV\nueGib3IOh01ju9npaz5/ZFdVX2cxTFfd/ABhiuTkqDqDNbiXnIL5xGUxtCcIwosHEcmCIGwZvv3s\nCOlsgb/85b3qQv9juNKT/Pfcm+mbnlfXNA3COzZ8yG219EXnCPtdBM1KMzNfHF5cjPaE/RT0koo0\n0z2ucsPFhegcXY0+HObWOvP5w9Vzq5diQVdyoBmcfgqTquHicuxIFgThxYOIZEEQtgxP9U2xo8lf\nzPX2P4puc3DMvof+aMUa5y0mks+Mz7KzOVC8MH4CXIElhV9ZwwWoVgdfpOpO8oVosnzpxeQZ9Tq+\nxqUfVCUWiGRNg8btOGf6cDlsRPzG0hVTJF8G2/YEQXjxICJZEIQtQaGgc7hvihtLGw/6fo7Wfojm\nxjB9kxUiOdYPufnNP+gi6LrOmfGEyvyajJ+E5j1LDsSZq43L3ldkl8oMV/FcfdE5eiMl4j16dlOi\nFgANPicBt6Oi4aKHYPIiHfVebDbje3MZLRIRBOHFg4hkQRC2BKfHZ4mnc1zfbYjk+TkYfgZ6bqYn\n4ltYl6YXVHvEFmAsnmE2nWNXiyFGdR3GjkPz3iUf0+B3Ued1ljdchHdW1Ukei2dIZfP0Rkqc5Ojp\nTYlagGrx6FqkBi6cHaGzzlW8FrsInnrw1G3KuQRBEFaCiGRBELYET/VNAxSd5IEnVNtDzy30hP1c\nnEySLxjLLkyRt0UiF2fGZwGKcYvEOKSmlhXJoIb3zk8kiheadsPchBpkqwIXDAHeYw7tpaYhGd00\nJxlgW+PChSJOcuz1l7zv6X5xkQVB2HKISBYEYUvw1IUpWkLu4ha2vp+DZoeul9Id9jOfLzAaT6uv\nhY0FHVtFJI8pwWfFLcZPqNvmPcs+bldzgLPjJU6yeX/z8evEjHL0miLZjHIsMUy4EWxr9HFxKomu\nqw8486EeAHa7Jop3il0UkSwIwpZDRLIgCFuCw31T3NDTiGZmePt/Du0HwB20Bs8WDrltEZE8PkuD\nz0nYb0QITJHbsm/Zx+1qCRBNZJieM7LVzcb9x6ojki9E53A5bLTXGR88rPq3q6ry/Cuhq9FHJldg\nYjYDwIi9DYAebUzdwexIlkUigiBsMUQkC4JQcwankwzPpLmhx8wjJ2HwMPTcAhTjAguG97ZIV/KZ\nsQS7moNFgT9+AvxN4I8s+7hdhvN8ZtyIHgRbVTa3Sk7yhegc3Y2+4oBc9AzYHJvaItFV0XBxMVdP\nRnfSmjc88wNWAAAgAElEQVQ2J85NqKUr4iQLgrDFEJEsCELNOWzkkS2RPPgUFLLQrURya8iDy2Gj\nv3J4bws4yWazhTW0B8Vmi0uwy8gwm5lmNE3lmKsVt4jOFaMWoJzkht6qrr2+FJU1cEOxDP16M/Xp\nAXWHabMjWerfBEHYWohIFgSh5jzVN0XQ7WB3q5Hp7f85aDbY9jIAbDaN7kZfMW4BaqFIYhQyszU4\ncZGJRIaZVNYSvBQKMP5CMTqxDO11Xnwuu5VpBqBlrxLZRoZ3reQLOv2TyXKRvIn1byYd9V40rbh1\nbyiWol9vxTtriGNZJCIIwhZFRLIgCDXnqb4pDnU3YDdjAX2PQtt+8ISs+3SH/QvjFlDzyIUpcM3o\nBLF+yM6tyEm22TR2Ngc4O14ikpv3QCYO8aF1nWs4lmI+Xyg2WxTyMHVu0+rfTDxOO60hT9FJnk4R\ndbWjTfepDxTSkSwIwhZFRLIgCDUllpzn9FiiWP2WTas8cvfNZffrjfjon0xS2GI1cGfGlJNtxS1W\nOLRnsqs5yOmxEje8SsN75geKHmNpCbF+yM9vupMMlHUlD8ZSJPzbVA45MarO5QuDO3CJZxEEQdhc\nRCQLglBTzDzy9d0N6sLQYchnrKE9k+6wn0yuwNisUQPX2Ktua+0kjyeo8zppChgrlk2R3LR7RY/f\n1RJgfDbDTDKrLjRfXf48a8TsSN7eVLv6N5OuBl+Zk5ytM352U+el/k0QhC2LiGRBEGrKU/1TuOw2\n9nfVqwt9jwIabLup7H6mI9oXNYb3nF6o69oCTnKCXc2BkmaLk0r0uYPLP9DAzDKfnTDcZG8DhDqq\nIpJ9LjvNQUO816D+zWRbo4/ReJrkfI7ReBpHZIf6wtQFY5GIDO0JgrD1EJEsCEJNeerCFNd01uFx\n2tWFvkeh9Rrw1pfdr9vsSp6sGN6roUjWdZ3T47PFPDKomMQKhvZMzAUkp8cqcsnrFMl90Tm6w/6i\neI+eUQLcH17X866FbWHV0/x0/zT5gk6wuQdsTvWzmxkQJ1kQhC2JiGRBEGpGOpvnuaGZYvVbLqPq\n3yqiFgDt9V5cdtviXcnrbIJYK5Nz88SSJc0WuXnl2K5gaM+ko96Lx2krb7ho3gsTpyGfW/PZLkTn\n2F5W/3a2JlELKNbAPX5+EoD2cFB1NV98XOWkRSQLgrAFEZEsCELNODoQI5vXuaHHzCM/Dbn0gqE9\nALtNo6vRS3+0ois5MwNz0U06cTmnK4f2Js9AIadE7goxGy6srmRQj89nVGZ3DWTzBQamU/REfMWL\n0TM1GdqD4kKRx84pkdxR74XG7eoDEci2PUEQtiQikgXhSkfX4Tvvg1Pfr/VJFnC4bwqA67sNJ/nk\nt8Hugp6FIhlULnnxGrjaRC7M6jYzMsH4SXXbsnKRDHBVc7DCSTac6LVELs49ROYrv42tkC02W6Tj\nqklik+vfTJoCbjxOG8cGZ4ASkazn1R3ESRYEYQsiIlkQrjASmRz/9f7jTCYy6kL/z+Hw5+DYv9X2\nYIvw4xfG2dsWos7nhHwWjn0Vrnqdys4uQnfYT/9kEt2MV4SNAbAaieQzYwmCHkdxOG78hFr7vMpY\nw86WAKPxNPG00XDRtFstU1mBSL73yBBff3qweOGnf0Pg9Ld4u/2HxUUi1tBebZxkTdPoavCRK+iE\n/S68Lrva/GciIlkQhC2IiGRBuML46lMDfOEXffzkhXF14fH/pW6jZ2p3qEW4OJnkyMUYb9jfri6c\neRCSUTjw1iUf0xvxkcrmGZ81PgDUbSsOgNWA02Oz5c0WYyeUW+twrep5djUrJ9paKuI0nNZLiOR0\nNs9f3vc8f/7N51QP8dgJGHiCebuf9zi+wXavEU2pYf2biZlL7mhQQ3w0ble3/mb1fgVBELYYIpIF\n4QpC13W+9Lha83s+OgfTffDCd8HpUyK5kK/tAUu476jaKHf3AUMkP/tl8DfBzl9a8jHdVg2cEbmw\nO1Rfcg3jFleVNluMn1hVHtnkKiPTfLZyeO8SC0V+cHyU2XSObKHAJ354Cp7+/8Hu4p97P45Xm6fh\niY+pO06eAc1e7JauAWYuub2uQiSLiywIwhZFRLIgXEH84tykEsfAhYk5ePJ/g80ON79HDYKZK4Br\njK7r3Ht0iBt7GlU+NTmlMtPXvBnsziUfZ2Zs+ycrhvdqIJInExkm5+bZaTZbZGbV9rg1iOTOBh9u\nh61i895eNbiXTS35uK8dHqSj3svv37aDHxy9QP7ov8Hee3gks5Pvet6A9swXYeRZ9QGpoRsc7lWf\nrVoscJLrt6lISYN0JAuCsDURkSwIVxD/8lg/DT4nt+6KMDIxDs98Efa+Eba/Ut0henrzDpOOw2du\ngy/8Mvzgg/DsV9RgW6HA8eE45ybmuOeg4SI/93UoZOHAbyz7lO31Hpx2jQulw3tNu5VIzqY38M2w\noI5twdDexCl1u4r6NxO7TWNHU4Az4yVOcsteQC8+bwWD00l+fi7Km67r5A9fuYNf9x7GPh9HP/Rb\nnJ+Y4/Gu3wFfI3zvAzWtfzOxRHK9IZIdLnj5H8O1b6nhqQRBEJbGUesDCIJQHUZn0jx4cozfvbUX\nXYdc35fBHoeX/UHxV9sTp+CqOzbk9afm5vnq4QF6I36u7ayjNfY82shR9doDTyonG2D3Xdwf/ABO\nu8brX9Kmrj37ZbVApPWaZV/DYbfR1ejjXKmYbD+oatfGjkPndRvy3sim4O/3wq3vU8IOOG2cwap/\nM/PDq2y2MLmqJcBTxopuoOhIj5+A9gML7v+Np4fQdXjTdZ0EPU7+KPQzzk63c2Z2B8MzR2i5bhfs\n/kv4znvVA7a/ck3nqhZ72kO4HDau7awrXnzNR2p3IEEQhEsgIlkQrhD+9cmLFHSd37yxm1+cHedG\n7ftkWq/D3Xm9uoMvsqFO8r1Hhvjb771g/fntvsf4CHDxzi+wbfs+9don7oOH/5arbHlu2/WnNPhd\nyl0ePgJ3/M2KXmdPW4hnB2LFC+0H1e3IkaqJ5Ggiw//66Tne80u7CHmcKqaSmoIffwR2vRaadnN2\nbJag20FryKOy3se+Cu4Q1Pes6TV3tQS59+gwiUyOgNuhPlzY3YsO7xUKOl9/ZoCX7wirrO/o8zTN\nHONrnt/mn+47jq6jmi32v101m4w+V7P6N5OOei/P/9c7cDnkF5iCIFweyN9WgnAFkM0X+NcnL3Lb\nVU1sC/s4mHmK7bZRzm1/W/FOTbs3VCQPTCfxu+x84w9ezofv3sfN4QQFNH77W2PEMgXlsL7qPzO0\n9/d4U+H7/MfAg+qBR7+satOu+bUVvc6+9hCD0ylmkkZdWl0XeBuV0K4SD5+a4HOPXuATPzCiDjNG\nxVo+C/e9Gz2f47mhGXa2GM0Wj3wC+n4Gd/w3sK3tr1Uz22w1XNjs6me2yPDe4xcmGZhK8ebru9SF\np78Adje773gnU3PzgCGSbXa48+PgCkLXjWs6VzURgSwIwuWE/I0lCFcAD54YY3w2w9tepoages9+\nkRG9kSe9JUs5IrtU3GKDVjgPTqfobPBxXXcDv/XyHu5oz5DztXJxJs8fffkZsvkCAJ/S/j3f029i\n3/MfU1nkY19R7mygaUWvs69d/br++IhaTIGmKTd5+NmqvZfRuMo3/8vj/cq1jg+rL7zqz2HwSY59\n8+M8czHGnS9phQs/g4f/Vg0dHnzbMs+6PGa2+Uzl8J65oKSErx8eJOhx8LqXtML8nPoe7r2HVx+6\nmuu7Vcd0j9mR3H0TfOAitOxb89kEQRBejIhIFoQrgC893k9HvZdX7m6G8ZO4Lj7CV7iD81PzxTtF\ndkM6tmErnIemU3Q2lPTdTvfhatrOR3/lGn5+dpK/+s4J0tk83z0+xkN7PgxdL4Nv/C4kxmD/8gN7\npexrDwFwYjhevNh+QMUSlmmCWA1j8TR+l52mgJs//9Zz5GODgAY3v5dU9+3sev4f+OWuDL9zMKje\nQ+N2+OW/V4J9jXQ1eHE5bAuH92aHIVXMKsfTWR54foQ37G/H47TD8W9BJg7XvwNN0/j7Nx/gY796\nLXXekpaQNbrbgiAIL2bkb05BuMw5Oz7LL85N8psv24bdpqnlIQ4Ph8N3c36itAXiKnW7QZGLwenk\nApFMfTdvuq6Td75iO198rJ/3/NsRZtM57jq0HX79y0pc+iKrGiaMBNy0hNwcLxPJB9WK47HjVXkv\nozNp2uu9fOgN+zg+HOfs2VMQaCanOfiTxNspaDY+4f4c9nvfpQTsr30B3MFLPu9yOOw2tkf8C51k\nKHtf3z02QjpbKEYtjn1FNVdsuwmAbWEfb76ha11nEQRBEEQkC8Jlz5cev4jLblOiKTmlRNO1byHS\n3MaFaIlIjpgiefFKsfUwk8oST+eKHbjZNMyOQEMPAO9/3dW8ancTPzg+RiTg4uYdYfCH4fd+Au98\naNX9vfva6zg+PFO80Ga0P1QplzwWT9Na5+H117Tyyt1NTAydZ97fyv986BwPDjk5u///wTP4KJz7\nCdz5t5ds5VgpV7UEy53ktv3qdqQYJfnq4QF2NQfY31kHhQIMPaOaK9bhYguCIAgLEZEsCJcxyfkc\n33h6kDuvaSUScKuNa7k0vOwP2N4UYCiWIjVvbNkLdRY371WZoWkVc+hsUF24zAwAurUowm7T+B+/\ncZAbexv53Vu347Abf/V469e0cW1vW4hzE3Oks8Z7q+tUjvTw0fW+FUBlkltCHjRN4yN3v4QWJnl6\n2s//+MkZ3nignQP3vBde8qtww+/Bde+oymuCqoEbnE4xmzaGEgPNEOqwxH8sOc+RizHuOdCuBgYn\nz8J8YtGKOEEQBGF9SAWcIFzG3Hd0mNlMTg3s5bPw5D8pV7F5D70RNWzWNznHnraQyqWGdy65nGI9\nDMVMkWw4ydN96tZwkgGCHidffddNVXm9fe0h8gWdU6Oz7O+qLxneW7+TnMsXmJjNqGo3VHwh45jm\n0eQ+WkMePvLGl6jv5Zs+v+7XqmSvkbc+OTLLjb2N6mLJ+zIjJvu76tXXRo4W7yMIgiBUFXGSBeEy\nRdd1/uWxfq5uDXJdd4PqIJ4dhpf9IQDbm1S7QVnkYoNq4Aan1Zpoa5vaIiK5mlgNF5XDexMvwHxy\niUetjGhinoIOLXVKJJOO487Psa1nJ59523WqN3mDKL6vkihJ+wHlGKfj1rDi3jYlphk+Ag6vGsoU\nBEEQqoqIZEG4TDkyEOPESJy33dStfvX+xP8HjTtg52sA6AkrkXx+oiTjGtmtohDzc4s95ZoZnE7h\nddpp9LvUhek+cHgg0FLV1zHpavQS9DgqxKQ5vPf8up7brH8znWTiQwDc/tJDvKSjbqmHVYXmoJtI\nwFUu/tvMZSnPcnx4htaQh3DAyHAPH1F5aLv8UlAQBKHaiEgWhMuULz3WT8Dt4I0HOmDwMAw+BS99\nl1X35Te2wZ0vG97bpW6rnEs2my00c3gs1g/13Rs2TKZpGnvbQhVisjrDe6Mzi4tk6jrX9bwrQdM0\n9rbXLay3Axg+wvHhuFWBRyEPI8ckaiEIgrBBiEgWhMuQqbl5vnNshF851IHf7VC1b+4QHHhr2f22\nN/krauCMX8tXWSQPxRZ2JJtDexvF3vYQL4zGyReM5SihdvA3r3t4b8xwklvqDLd2Zqj4/JvAvvYQ\nZ8Znmc+p5Sv4I1C3jdzQEc5NJIoiOXoGsnMikgVBEDYIEcmCcBnytcMDzOcL/PuXdattcCfuVdve\nKrp6eyN+zk8k0M0te43bQbNVvQZucDpVrH/TdZju37A8ssm+9jrS2QIXokacpErDe6PxNA6bRsRv\niOT4EKBBsG19B14he9tCZPM6p0v7ktv3kxt8hoIOe43csvU+RSQLgiBsCCKSBeEyo1DQ+dIT/by0\nt1GtMn7+m1DIwY2/t+C+25sCxNM5puaMzXsONzT0VnV4bzadJZbMFuvfUtNqA9yGi2TlqC4Y3oue\nWlfmemwmTXPQjc1mREXiQxBsBfvGDeyVsvhGwYN44n2EmCs6ycNHwOkvRmgEQRCEqiIiWRAuMx4+\nM8HAVIq33WTEGSZOqphBY++C+26PLNFwMVE9kbxk/Vv9xsYtdjYHcDlsi2zeK8Doc2t+3tF4uths\nASpusUlRC1ADl36XnRMjFe8LuNEzUPw+jxyFtmvBZt+0swmCILyYEJEsCJcZX396kEjAzWv3tqoL\nk+eWdBPNGriyXHJkl6oUy+eqcp4Fi0Ri/ep2g51kp93G7pbgEpv31p5LHo2ni0N7oJzkUMean2+1\n2Gwae9pCi76vVwWH1HBkPidDe4IgCBuMiGRBuMw4PTrLdd31uBzG/32jZ9SSkEXoqPfitGsVDRe7\noZAtitl1MmiI5IUdyf+3vfsOj7O6Ej/+vTOjUe+9S5bkIvdubNONMYZgSKgJCSFk2ZTdhLRdkuxu\nsuyPXTYFNiGEJARCjekBQkyLbbDBVe6WLduyVaxm9WJ1ae7vjzvqxSojjWSdz/PoGekt89558wYf\nXZ17ztjOJAOdFS46c64DosEvalR5yedqTLc9wORX1xSOS2WL7mbHBHCsqBaHc1Fim2cQZ3UEC205\n5oDyE9DWKEGyEEKMIQmShZhEHA5NXmVDZw1kGqugoXzAINlmtZAY6turVvJ08+qiznsFVQ142iyE\n+XWrkewT2mcR4ViYHRtAdUMrRc6ybYDJSy4e2UxyXVMr9S3tRHU2EqkxFSTGMd0CTOWO+pZ28ipN\nY5Qz5fUcciST2OxMk+mYKY+WdtRCCDFWJEgWYhIprm2ipc1BYkeQXHHavA6yeCs5zLdXTrIzSHbR\n4r2O8m+dNZLHobJFh87Fe4W9moqUnYDm8wOcNbBzAzQSGc90C+jbeS+zqIajjmR8GwqgodLMlNv9\nBvzlSAghxOhJkCzEJJLnDHaTwpz5vx31jkMHDpKnhfuSV9HQVU/YK9CkJLgoSDbl33y6NlTljvmi\nvQ4zowJQip6L3KLnAxpKjw37/UpqmgG60i1qi8zrOAfJaZF+2Cyqs8JFZmEtxy0pZmfxQRMkRy/o\nbBwjhBDC9eS/sEJMIrkV5s/vnekWFafAYhs0/3damC8t7Y7OBXaAmXkuPe6SMRVUdWsk4mg3ba/H\naSbZ19NGcphvzwoXEbPM6wg+X2dL6o50i5oC8xo4vkGyp81KWqR/5+fKLKqlNXyu2VmQYap3xEiq\nhRBCjCUJkoWYRHIr6rHbLF3pABXZJiAdpIbvtHA/AM6Ud0s/SFhhZiQbKkc1noYWU4O5M0iuLTQ1\nm8dh0V6H9OiAnjWFAxNM/eARBMn9plsoi5l5H2ezY7oWJWYW1ZAYF2tqXB96CdqbZdGeEEKMMQmS\nhZhEcsvrSQzx6Wp0UZ49aKoFmJxk6FUGLu1aU0/49JZRjadP+bfOyhZJo3rf4ZgR6U9hdSP1zc6S\ndhaLqQU9onSLJgK8bHjbnbWHa4tMgGy1uXDEQzM7JoDy880cOFtNbVOb6bQXsxAqnXnoEiQLIcSY\nkiBZiEkkr6KBJGfQi8NhAqbQlEHPCfW1E+zj0TNvN3aRqUBx8r1Rjadv+bfxqZHcXWqEc6a8+y8B\nEekjTreI6tFIpGDcUy06pEebRYmvZpiUj9kxAV2BsWegmVUWQggxZiRIFmKScDg0uRX1JIU6Z21r\nC6Ct6YJtiZVSXJISyienyrvqCVuskLYWsv9u8ohHqKDK5EjHd++2p6wQMH51hTuC5Oyyuq6NEbOg\nvhTqKy78BjUF8MY/wktf4FxNY9eiPRj3RiLdpTsrd7xzqAiLgllR3YLk6HmyaE8IIcaY/FdWiEni\nXF0Tzd3Lvw2hskWHy9LCKaltIru0W15y2lpTZ7lg74jHVFDViN1mIczP02yoyjWNN8YxPSEx1Ber\nRfX8bB2L98oGmU1uPg9bHoLHlsDhlyDrHfxrsrrykbU26RZuCpL9vTxIDPWhrrmNaeF+JgUker75\nJSR2sVvGJIQQU4kEyUJMErnlvStbZJvXIdTKvXR6OAAfnyzr2phylQm4Tr4/4jEVVDcSG+TdlSNd\nnTeui/YA7DYLiaE+/QfJA6VcnHgPfrMEtv0MZq6H+z5CKysrm7Z3pVs0VkFrg9vSLaCrDnTHK14B\ncM+7sPp+t41JCCGmigsGyUqpeKXUVqXUMaVUplLq287tIUqpD5VSp5yvwc7tSin1a6VUtlLqsFJq\n0Vh/CCGmgryKXjWSK7LBMwD8Ii54bmyQNynhvmw/Vd610TsIEi6BUx+MeEw9yr+BmUkex3zkDqnh\nfj2DZP9oUw+61+I9rTXvHSmicuN9lLZ6wVc+gFuehpiFtMSt5DrLbiL9nbPibmok0l1HU5HOIBkg\nYTl4B7tpREIIMXUMZSa5Dfie1jodWAF8UymVDjwAbNZapwGbnT8DXAekOb/uA55w+aiFcLWK0/DY\nYnhkdtfXo3Mh62/uHlmnnIp67FYL0YHOoLT8lJlF7uh0dwGXpoWzO6eCptZuOcjT18K5o1B9dkRj\nKqxq6AqSW+qhvsw9QXKEH3kVDbS2O8wGpfos3sspr+fuP+3ll3/+KyHU8FjTOlpjl3buPxe/jmmW\nElK1c/GhmxqJdLcgPsj5KkGxEEKMtwsGyVrrYq31fuf3dcBxIBbYADzrPOxZ4Cbn9xuA57SxCwhS\nSkW7fORCuNLxt83MbPJlMO0K89XeAjt/695xdZNX3kB8iDfWjtSGitPDakt8+fRwmlodZORWdW2c\nvs68jmA2ubGlnfLzLd3KvzmDy3HqttddaoQfbQ7dOdsOmJSL0uOgNY9vzebaR7exP6+KB+eZ2tBb\nm2ewJ6erTnR2yBW0a8W0sr+bDW5qJNLdypRQ3vnn1SxLDnHbGIQQYqoaVk6yUioJWAjsBiK11sXO\nXSVApPP7WKD7tFSBc5sQE1fOdgibATc/ATc9br6WfAXyPu0KltzMVLZw5iO3NprOdheobNHd8mkh\n2K0Wtp3qlpccNt0EtcMNktvbqDr4Nl+3vs0VpS/A9kdg1+NmnxtKk3VWuOiechE+C5qqycnN5ufv\nn+DyGeFs+d7lXGLJxBEYT7ktig8ySzoPz2/2ZbdjFiF5m7oW7Skr+EX2vty4UUoxJzbQbdcXQoip\nbMhL0JVSfsDrwP1a61rV7U+8WmutlNLDubBS6j5MOgYJCQnDOVWIUfvkVDmPbTmF1mDVbfyp9FM+\n9b2GhfUthPjazUFzb4GP/huOvg6rvu3W8WqtyatoYFVqmNlQcRrQw5pJ9rHbWJIUzLaTZfxovXNh\nm1Iw/VrY/7wJvD28B3+T0uNw8EU49DIx9aX8qwfmb0sdWQ3ewcMK3F0lJbyfINm5eC8ncx/gz4/W\nzyLCzw65n2KZcR2rQ8L58Ng5fnrjbJRSlNQ2k8MKVlY+bT5nbaHJbbZYx/3zCCGEcL8hzSQrpTww\nAfKLWus3nJvPdaRROF9LndsLgfhup8c5t/Wgtf6D1nqJ1npJeHj4SMcvxIi8sCuPzKJarBZFWvsp\nvHQTr1VO462D3R7V0BRTauvwq+M7ON33983SumYaW9u7aiQPo7JFd5emhZNVUkeps/0yYLrvtTVC\n7ieDn/zavfDbFbDrCYhfxkcLf8Wspqcp+ec8+PE58/X9bFOBYZz5etqICfTqN0iuyz9EmJ+nuXel\nx6CxEpIuZe3sSIpqmsh0trQ+V9vEPp9LTRvqY2+6tZGIEEII9xtKdQsFPAUc11o/0m3X28Ddzu/v\nBt7qtv1LzioXK4CabmkZQrid1pqMvErWzo5k430rOnNUy0OX8u6Rkp4Hz70Nzh0ZUfe2ESk+DP8d\nA3k7emzOLTe5tp01kis6aiQP3m2vt8umm5noHlUuklaDh8/g3ffOl8LR16iefgsn79rL8cuf4L22\nRbRZvYkIDgQPL/PlhvbNHVIi/Mgu6xYk+4aBbwS2iiyWJgWjlILc7WZf0mqunhmBRcEHx84BpiW1\nZ1AUJK6CzDfdWiNZCCGE+w1lJnkV8EXgKqXUQefXeuBh4Bql1ClgjfNngE3AGSAbeBL4huuHLcTI\n5ZTXU36+haVJzsVQudshYjar589kb15lz1nWOZ81M4tHxmk2effvTW3eTx7tsTmvoleN5PJs09XO\n7just58VFUCYn71nXrKHl1moePKDPrPY7Q7N34+d4/FnnwfgniNzWfuH41z3q+28tPcsiaG+XTWS\n3Swl3I/TpfU4HF2foTlkOrGteV3/W+dsN9U3guIJ9fNkcWIwHzqD5HO1TaaRSPoGKD8BlWcgIMYN\nn0QIIcREcMFpH631J8BA/wpe3c/xGvjmKMclxJjpqO6wNCkE2pohfzcs+hLXz4vi0b+f5N2jJdy9\nMskc7BdhAsgjr8JV/z7kcmsj0lhl8p+9As1CurITED4DMOXfPKyKmCBno4uK7GHPIgNYLIpL08LZ\ndrIMh0N3Bbhpa+HEJnPNiJlorfnDtjM8syOX4pomHvbJoNXixdfuvBltsXe+3/RI/1F/bFdJjfCj\nsbWdoprGzoobhfZk0tRerIlB4HCYhZizPtN5zjXpkfz3pizOVjZQUtvEFTMiYNaNsOkHgDbdA4UQ\nQkxJ0nFPTDl7cisJ8bWTEu4LhftNPm7ypaRG+JMW4cemI72yg+beBtX5cHaPy8dyuuw8T247g9Ya\nDm40Y7n1GbB6mtxfp7yKeuKDfbBZLWa2t+LUiBfIXZoWRkV9C8eKa7s2pjp/3z29GYB9eVX8z7tZ\nJIT48Lu7FnF7eD4eicu5dl4i6+ZEd35Ncy6Ymwj6q3BxpCUGX9XMLO9qkzbTVG3K/Dldkx4FwBv7\nC2loaScq0BP8IyFxpTlAZpKFEGLKkiBZTDkZuZUsSeyeo6pMHiqwfm40e3IrKa3rlnIx83qwecGR\nV1w+ll9+cIKHNh1nf14lZDwNcUtNu+j5t8OhjVBfAZiW1Ikdi/bqy6GpBkJHFiSvTjN5yT1SLoIS\nTAm8bFMjOCPPzLY/cddi1qV4oc5ldt6jiaq/IPmjavNZbRVZJtUCTA62U3KYL2kRfmzckw9AZIBz\npgg18JYAACAASURBVD7dWfY9SCrvCCHEVCVBsphSSuuayK1o6Jajug2i5oCP+fn6edFoDe9nnus6\nySsAZlwHmX+B9laXjaWyvqUzH3bn5rfM7PCSe83OFd+AtibY9zRaa3Ir6rst2htZZYsOEf5ezIoO\nYNvJsp47UtdA7qfQ0sC+vCqSw3xNObz83YDuml2doEJ97QT5eHDauXivprGVzeXOTnWlx031jpCU\nPrPD16RHUuLMQ4/qCJIX321m9KMXjNfwhRBCTDASJIsppSMfeUlSMLQ2mRSKpK4/v6dF+JES7sum\nw71TLm6Fhgo4vdVlY3nzQCGt7ZrVqWFMy3sZh1cwzHbOYEbMgpSrYc+TlFXX0tDSTnJYr8oWYSML\nksGkXOzPq6axpVuL6tSrob0ZnfsJ+/OqWJTgDDDzPgWLB8QtGfH1xoNSitRwv86Z5P35VdRqH5p9\nok3r7bwdkHxpn/PWzo7q/D4q0Bkk2zxh9s1jm4MuhBBiQpMgWUwpe3Iq8fKwmC5mBXuhvbnHn9+V\nUlw/N5rdORWUn2/uOjH1GvAKgqOvuWQcWmteyTjLvLhA/uvqUK5Rezkctr5nM49LvgHnz3F+n0nz\n6Ey3KD9lcpYD4/t556FZmRJKS7uDjLyutswkrgKbN3WZ71FR38LixI4geYepF32hRiMTQGpEV5C8\nN6cSm0Vhi54NJ96F5hpI6hskz4sNJMLfE+iWbiGEEGLKkyBZTCkZeZUsjA/Gw2ox+cjK0ieNYP28\naBwa3u/WshibHdKuMTPJ/TT7GK7MolqySuq4dXEcyfl/wUO18z+lK2nvVr6MlKshfCbBh/8IaNJU\nEXz4Ezjwglm0N4pOcMuSQ7BZFJ9mV3Rt9PCCpNWobLN4b1FiEDSfh+KDEz7VokNqhB9VDa1UnG8m\nI7eKObGBWCPTTVk96DdItlgUn5kfQ3yIN14e0l1PCCGEIUGymDLqmlo5VlTL0uSO+sifQNQ88A7q\ncdyMSH+mhfn2rXKRuArqS50toUfn1Yyz2G0WbpwbBfueoTxiJbtrg/n4ZGnXQUrBim8QXJvF+/YH\niP3z5bDjMYhfBjc+Nqrr+9htLEwIYsfp8p47UtfgX5/LTM9K0iL8zWy7o23CL9rrkOJcvHe8uI6D\nBdUsTQru7LxH2HRTuaIf/7puJu/8c98AWgghxNQlQbKYMg7kV+PQmMCptdEEgP3kqCqlWD83mp2n\nK6jonnLRkZaR9+moxtHU2s6bB4tYNzuKwILNUFtA0GVfI8Lfk+d35vU8eN5tlHnE4GFVsPYh+F4W\nfP5liF00qjEArEwJ40hhDTUN3RYjpq4B4PaQk1gtyqRaKIsJzCeBVGdJur8cKKSlzcGSpJCuILmf\nWeQOdpuFQG+P8RiiEEKISUKCZHFxGEIKxN7cSiwKFiYEw9nd0N7SY9Fed+vnmpSLjuoTgKkm4Rsx\n6iD5w2PnqGls5bZFkbD5QQhKxDZrPXcsS+Cjk2XkO7vrAeDhzT0Bf+A/45+Clf9kmpu4yKrUMLSG\nnWe6Ui7qfBM4q8O5VB0yG/J2mNl2rwCXXXcsxQZ54+1h5Z3DRQAsSQyGiHSYsR4WfsHNoxNCCDGZ\nSJAsJr+CDPjvWNMtbhB7cyuZHROIn90K+54BZYWEFf0eOyvanwh/T3bndFvYppTJzc3bMarhvrqv\ngNggb1aWvw5lWXDd/4LVgzuXxWNRihf3mNnk7NI6/vOvmZwoqeuqbOFCC+KD8Paw9ki5OFRQy8ft\n80iqzYDmOjPbPklSLcDkF08L96W5zUFKuC+hfp6mUsWdG83iQyGEEGKIJEgWk9+Zj6C1Hg6+OOAh\nLW0ODp6tNqXfNj9oah5f8cCAM6RKKRYnBrPP2VSjU+IqqDkLVXn9nnchRdWNbD9VxpfmemH5+H9N\nO+jp6wCIDvTmmlmRvLz3LLf9bidrHtnGC7vyWDcnmq9fMfwW1Bdit1lYlhzCjtNdM8n786vYpudj\na6uHXb8z1T8myaK9Dh1NRZZ15J4LIYQQIyBBspj8ip2pAYdfBYej30OOFtXQ1OrglrZN8MkjsPjL\ncNkPBn3bRQnB5Fc2UFbXLS+5I2Ac4Wzy6/sK0BruqnvKBKDrHu5Ri/fLq5KobmjlXF0TD1w3k50/\nvJrH7lw4ZqXJVqWGkl16nnPOZhr78qooDV0OFhvs+LU5aLIFyc685CWJEiQLIYQYOQmSxeRXchg8\nA6GuCPI+6feQjNxK1ln2kH7oIZOfuv6XF2wUschZJ3h/frfZ5Ih0Uy95gOsM5nxzG8/uzOOe+GJ8\ns16Dld+C0J4zxCumhbLjgavY+r0r+NrlKYT5eQ77OsOxMsW0bd5xuhyHQ7M/v4pZSbGQcAk015rP\n6zO5gs0VKaEEeNlYlRrm7qEIIYSYxCRIFpPOjtPlPPKBM/+4sRqqcmH5fWD3g8Ov9HtO6dGP+LX9\ncVTcUvjcU2C1XfA6c2IDsFst7O+ecmGxjDgv+Q/bzlB1voEftD0JAXFw6Xf7PS4myBuLZXw6vaVH\nBxDk48Gn2RWcLjtPXVObaSKSerU5YJLNIgMsTQrh8E+v7eqeJ4QQQoyABMli0nlxdz6/3pJNXkU9\nlBwxG+NXwKwb4dhbpt10Nxu3Z/IP5x7kvHe0KZ9m9xnSdTxtVubEBvSfl1x5BmqL+z+xH+dqm3hy\n2xkejtuFT1UWXPsQ2F2/GG+4LBbFJdNC2ZFdTobzcy5KCILp15nSbylXu3mEQgghhHtceDpNiIFU\nnIb3f2xKqXWw2GDNTyEyfcwum1VcC8CmIyV83fOw2Rg9z8zyHvoznHwPZt8EwI7scuo/eIhwaw36\n868PO3VgcWIwz+7Mo6XNgd3m/J2yMy/5U5h7y5De59EPT3KT3swtFX80La7TNwxrHGNpZWoY7x4t\n4S/7Cwn28TCVNNRM+O5x8Ou/+YYQQghxsZOZZDFyh16CU+9DU03XV+522PrQmF2yqbWdXGcd4U1H\niqH4MPhHm/rByZeboO7IqwDkVdTzixff4svW92ib/wWs8UuGfb3FicG0tDnILKrp2hg1D+z+Q065\nOHmujoADT/A/tj+gUq6C2569YD70eFqVEgrAntxKFicGozrG5h81ocYphBBCjCeZSRYjl7MNYhbC\nP2zu2rb5v2D7L80sc6jry5Zll56n3aGZHxfIoYIaWvQB7FHzzE6LFebeCrt/T11VKfc+c4z/1k+h\nPP2xr31wRNdblGAW7+3LqzJNSMDkMycsH1pTEa05+ecf8CPbRlpmbMB+6x/BZh/RWMZKcpgv0YFe\nFNc0dX1GIYQQYoqTmWQxMs3noTADknt1rFt2H1g9YNdvx+SyWSV1ANx/zXS8aMZWeQqi53cdMPdW\ncLTyxguPk161mWVkYl3z7+AbOqLrRQR4ERfs3bPCBZi85LIsqC/v/0Sn4pe+xQ01GzkW81nst/9p\nwgXIYGpCX+KcTV6cKEGyEEIIARIki5HK3wWOtr5Bsn8kzL0NDrwIDZX9nzsKJ0pqsdssXJoaxg2R\nlVhwmHzkDtHzqfNPYUHZ2/yP70smgF58z6iu2dFURHdvfd3RhW6QlIvGirNEn3iON61rmfblJ81M\n9wR1y6I4FsQHsSA+yN1DEUIIISYECZLFkL20J58rfr6VK36+lY2vPE8rNm59V1Pd0NLzwEu+CW2N\nkPGUy8eQVVJHWoQfNquFz0SYTnHFPtM79ze3O9jYtIL5ljP4NpfC+l+MOjhdlBDMudpmimq6Vc2I\nWQg27wGD5KbWdp574RkAIq76Jl72iZ3ZtDI1jDe/uQovj4kbyAshhBDjSYJkMWQv7T1LU6uD+fFB\nrLIeI9c7nb0FTbyScbbngZHppnTYniehrbn/NxuhrJI6ZkT5A7DInk+19uWd3K4A9IVd+Tx3fhla\nWWDBXRC/bNTX7EhB6FEKzmaH+KX9NhVpam3nH57LILJ8B02eoaxcefmoxyCEEEKI8SVBshiSxpZ2\njhbW8NlFsfxqQxIJTadIW349y5JCeGFXPg6H7nnCyn+C8+c6K024QmV9C2V1zcyKCgDAvyqTPI8U\nNmWWAFDT2MpjW06RnDoLdd9HcP0vXXLdmVH+eHtYezYVAUi6DEqOQl1J56am1nb+8fl9fJpdyjrv\nLLxmrJEKEUIIIcQkJEGyGJIDZ6toc2iWJoVA7qeAhuTLuOuSRPIrG9h2qqznCdOuhMg5sOM3oHW/\n7zlcWSWmPvKMKH9ob4Vzx3BEzeNAfjVF1Y38dms2NY2t/PC6WSYX2cM1HddsVgvz4wP7Lt5LvxHQ\npoEJ0Nru4Gsv7OPjk2X87movvFoqIeUql4xBCCGEEONLgmQxJBm5VSgFixKDTek3mzfELmHd7CjC\n/Oy8sCu/5wlKmdzksuOQvbn/Nx2mE87KFjOj/KH8JLQ3EztrBQBPbj/Dn3bk8tmFcaTHBLjket0t\nTgzmWFEtjS3tXRvDZ0DEbDj6BgBbskr56EQZD26YzVqvTHPMtCtcPhYhhBBCjD0JksWQ7M2tZEak\nP4HeHiZITrwEbHbsNgu3L41nS9Y5Cqoaep405xbwjYADz7lkDFnFdYT42gn394TiQwBETF/GrOgA\n/vRpLgr4/rXTB3+TEVqcGEybQ3O4oLrnjjk3w9ldUFPAztMVeHlYuGNpApzZagJo/6gxGY8QQggh\nxpYEyeKC2tod7M+rYllyCJwvNbPD3Uq/3bksAYCNe3rNJtvs5rize10yjqxzdcyI9Dcd4YoPg4cP\nhKZy/VwTiN67OpnoQG+XXKu3hfHOxXu9Uy5mf9a8Zr7J7hzTsc6umyFvJ6RcOSZjEUIIIcTYkyBZ\nXNDx4jrqW9pZkhRiZpGhR5AcF+zDVTMjeXnvWVraHD1PjlsKdUVQUziqMTgcmpPdKltQfMjkPFus\n3Lksga+uTuYbV6aO6hqDCfa1My3cl705vWo/h6ZA9HzajrxOVkkty5NDTVm49mYJkoUQQohJTIJk\ncUF7c01guDTJmY/sGQhR83scc9eKBMrPt/BeZknPk+OWmteC0c0m51c20Njazqxof3A4oORIZxOR\nUD9P/u2GdPw8x7YW8aWpYew8U9EzLxlg9s3YivcTSykrpoXC6S1gtUPCyjEdjxBCCCHGjgTJ4oL2\n5lYSF+xtUhlytkHSKrD2DEgvSwsnIcSHF3bm9Tw5ai5YPUcdJHe0o54RFQBVOdBS17Md9ThYOzuK\nplYH23tX8ph9MwA32XYzPz4QznwECZeA3WdcxyeEEEII15EgWQxKa83e3CpT+q063wSovVtRAxaL\n4q4VCezJreysQgGYvOSYBVCQMapxnCipQymYHunXuWiPqHmDn+Riy5JDCPCy8cGxcz13BCdxwjqd\nz3ntxbOxHM4dlVQLIYQQYpKTIFkMKreigfLzzSZIztluNvYTJAN8blEcAH8/3iuIjFsKxQehraWf\ns4Ymq6SWxBAffKwajrwGFg+ImDXi9xsJD6uFK2dGsCWrlPZuzVNqGlt5tXkpya3ZXa24pT6yEEII\nMalJkDzeGipNu+Zdv+v6yngaWhvdPbJ+9chHzv0EfEIhvP/gNNTPk4QQHzKLanruiFsCbU1mhnWE\nTpTUMSfCA16+C078Da78Edg8R/x+I7U2PYrK+pYeLar35lTytzZTr5lPHgWfMIicO+5jE0IIIYTr\njO1KJ9HX1odg7x/7bm+ohMu+P/7juYC9OZUE+3iQGuEH+TtNrq1l4N+t5sYGcriwVy3hzsV7GRC7\naNhjaGxpp7LiHD9Uj0PdYdNueulXh/0+rnD5jHDsVgsfZJaYknjA7pwKKmzhOOKWYynYbRqIDHKP\nhBBCCDHxyb/k46mpBg5uhHm3w7/kdH1NuxJ2/x5am9w9wj4y8qpYnBiCqi8z+cjxywc9fk5sIGcr\nG6lu6JZaERAL/tEjXryXk3OKlzz+i+j6Y3Drn9wWIAP4edq4JCWUD4+fQzvbbe86U8nC+CAscz9n\nDpJ8ZCGEEGLSkyB5PB16CVrrYcXXwSek62vVt6G+FA6/7O4R9lBW10xOeT3LkoPh7G6zMWHFoOfM\njQ0E4GhhbddGpUzKRcGe4Q+iPJvEN28mTpVRcsPznZUk3Gnt7EjyKho4VXqe2qZWMotqWD4tFObf\nCZd+D9I3uHuIQgghhBglCZLHi8MBe/5gUg9iFvbcN+0KUyptx2PmuAkiw5mPvCQpBPJ3mVJuFyi7\nNjsmAIAjhb3zkpdCVS6cL+t70kAK98PTa6G1kbsd/0HkgnXDGf6YWTMrEoAPMkvIyK3EoWHFtBDw\nCoCr/wM8/d08QiGEEEKMlgTJ4yXnI6jIhmX39d2nFKy6HypOwcn3xn1oA9mbW4WXh4U5MYFmJjlm\n4QUXywX72okL9uZon8V7zrzkwiGWgju9FZ79DNrDhwcCf0Zr5HysFjWCT+F6kQFezI8P4sNj59h9\nphK71cKihGB3D0sIIYQQLiRB8njZ/QfwDR/4T/HpN0FgAuz49fiM5/RW+PUiKDow4CF7cytZEB+E\nXTdD0UFIGDwfucPc2ECO9p5Jjl4Ayjq0vOTMv8CLt6KDEngk4Tf8tdCXdXOihnTt8bI2PZJDBTVs\nOlrM/PhAvDys7h6SEEIIIVxIguQx9p9/zeSqf3sWx4n3eLxuNdN/uoXLfraVuqbWngdabXDJN0wF\nibOj6043JDsfh8rT8MItUJ7dZ3dTazvHi2vNDGnRQXC0Qvzg+cgd5sQGklfRQE1jt89o94GoORcO\nkuvL4fWvomMX88uYR3lsbz33rEri65enDOfTjbm16Sbl4mxlo2lFLYQQQoiLigTJY6imsZU/787n\n24HbQFlg0T3csTSe/MoG/nKgsO8JC78IXkFjP5tcdw5Ob4Y5twAanr8Zaot6HHKsuJY2h2ZeXBCc\n3WU2xi8b0tvPcS7ey+wvL7lwPzjaBz65YC842njB78v8ZlcFd1+SyH/ckI5SEyPVokNqhB9Joabt\n9PJkCZKFEEKIi40EyWPor4eKUG2NXN/2IZb0G/jmTZfz4IY5zIsL5IVdeZ0lxDp5+sHSe+H4X6Hi\n9NgN7MiroB1w+b/CXa9DYyU8/1lTq9np8FlT63h+fCDk74bQVPANG9Lbd1S46HfxXst5KMsa8Fxd\nkIEDKw8d8OSLKxL56Y2zJ1yADKCUYv3caHztVhYlBrl7OEIIIYRwMQmSx9CrGWe5L/gAtuYaWPaP\nndvvWp7IyXPn2ZNT2fekZf8IVg/TlW+sHNoIsYshfLpZjHfHn03qxZ9vh5YGAA4X1hDu70mUv6dZ\ntDfEVAuAEF87sUHeHC2q7bmjs6lI/ykXWmvyDm/juCOOW1ak8eCGiRkgd/j2mjQ++O7l+NilJ48Q\nQghxsZEgeYycKKnjUEENX7T9HSLSIXFl577PzI8hwMvG87vy+p7oHwlpa+HYW2NTDq7kiGkPPf/O\nrm3TLofPPWWC148fBuBwQQ3zYgNRlafNTPMQF+11mBMb0HfxXsg08A7uN0jWWvPL97MIqT7K+fAF\nPHjjnAkdIAN42qzEBnm7exhCCCGEGAMSJI+RVzPOMt+aS3jdMVh8jynz5uRtt3LrknjezyyhtK6f\nLnvpG6CuaOjl0obj4EaweMCcz/W65o0w/w7Y9TvqS3M4XXbe5CPnd+QjD30mGWBOTCA55fXUdl+g\nqJSZTT7bt6nIo38/xbsfbydANbB05RosE6TcmxBCCCGmJgmSh2P/8/BwInz8M2ipH/CwljYHfzlQ\nyHdDd4LNC+bd1ueYLyxPoLVd88res33fYPq1YLWb2WQX+d3Hp/nK0zvRh18x7+8T0vegq/4NlKLh\n3Z+gNcyLDzSL9ryDTU7yMMyJ61i81yvlInEVlJ+EmoLOTf/395P8evMp7ptWBYAlfunwPpwQQggh\nhItJkDxUWpuqE4522PoQ/HohZDwN7a19Dt2SVUpDfS2rGraYNsrefRd2TQv3Y3VqGH/enU9be6+0\nCq9AmHYlHHvbXHeU2h2aP24/gyN7M6qhDD3/jv4PDIyDS75JeM5bzFVnmB8XZBbtxS8Hy/AelY7F\ne5m9m4pMv9a8nvoAgO2nyvi/v5/i1sVx3BZ9Duz+EDZ9WNcSQgghhHA1CZKHKn+nmQG97mH4ygcQ\nnAzvfAd+ewlU5vQ49LV9Z/m8bwa2tnpY/OUB3/KuFYkU1TSxJau07870DVCTP2izj6Hak1NJ+fkW\nvha4h0rtx+MFg9QcXnU/ddYgHvTeSAh1pgtg/PDykQHC/DyJDvTqW+EifKZpmnLSBMl7cyqxWhT/\nddMcVOE+iF0IFmnMIYQQQgj3kiB5qPY9A54BZmY4YTl85T24YyPUl8Ib/wDtbQCU1jax9UQZX/H6\nGMJmDBpgrpkVQVSAFy/szu+7c8Z1YLG5JOVi05Fiwj0aWd6yi8yQa/jF5hzeO1rc/8FeAfzecjsL\nHZmw+admW8Lw8pE7zI4J7BskK2Vmk3M+htZGMotqSQn3xYsWs6AwdvGIriWEEEII4UoSJA9FQyVk\nvmlyi+2+ZptSMHM9XP+IqdbwyaMAvHGgkDSdR2x9pplFHqRCg81q4c5lCWw7WUZuea8cZ58QSL7M\nBMmjSLlod2jePVrCt6MyUe3NLLvpmyxMCOI7Lx/qmwoBVNa38Lu6VVT5JMH+58wiv5iFI7r23Fiz\neO98c1vPHdOvhdYGyP2EzKJa0qMDoPgwONogdsmIriWEEEII4UoSJA/F4Zehvbn/1Im5t5jOdR8/\njC7cz6sZZ/lW0Kdg9TTVIi7gtqVxALx7tKTvzvQNUJVjZlhHKCO3korzjdzY9DaEz8IzYQm//+Ji\ngnw8uO+5fX3aYx8uqKYNG+eW/dhsiJ4PHiMrczY3LgCt++m8l7QabN40ZW6ipLaJ2TGBXZU84iRI\nFkIIIYT7SZB8IVqbVIvYxRA1t/9jrv8F+EbQ/MpXqSgrYU3rR6akWn8VJHqJDvQmPTqArf3lJc+8\nwbSzHkXKxaYjxWzw2ENAXTZc9n1Qigh/L37z+UUUVjfy3M6etZoPF9SgFMQuvwmW3Gs6AI5QR3vq\nPk1FPLxNbeZTHwCa2TEBULgPAuLAP2rE1xNCCCGEcBUJkgdR29RK7clPTBvlQRbg4R0MNz+BV81p\nXvN8EHtb3eDH93LVzAj25VdR09CrUoZvmCmZNsIg2eHQvH+kkH/1ehPCZ5l8aqfFicFcOSOcJ7ef\n6ZEOcbigmmlhvvh72+GGR2DB50d0bYAIfy8iAzw5XFDdd2faWrzqC0hVhaTHBEBBBsQuGvG1hBBC\nCCFcSYLkQdz3XAZbXvwZLVZfWmbeNOix7UmXs9FyA6mq0NQUTlw15OtcOTOcdodm26myvjvTN5iq\nGqVZwx0++/KrWNHwEdGt+XDFA32qRnx7zXSqG1p5bmcuYLreHSqoMaXfXGRpUgg7T1ege+dVO0vB\n3ex7lCBdC9V5kmohhBBCiAlDguQBnK1s4NiZfK6z7OKV5hVc98R+dmSXD3j8ztMV/LThFkpiroGr\n/n3QBXu9LYgPJtjHo/+Ui1mfAdSIZpPfPXSW+z3eoD1iNsy6sZ/rBnH59HCe3HaG+uY2SmqbKKtr\nZp6zEYgrrEoNo7SumdNl53vuCIzjtCWJNbZDZhYZZNGeEEIIISYMCZIH8PahIm62foonLUxf/0+0\ntms+/8fdfPeVg7Q7+labeOtgIR6ePgTd8zLMHnzWuTerRXH59HA+OlnW9739o0wJtsw3Bq9ykb8L\nmus6f3Q4NOrwKySpEqxX/XjAZiDfXpNGVUMrz+/K43CBWWA3L951M8mrUsIA2HG6osf2+uY23muZ\nR1rTUTi9xeRexyxw2XWFEEIIIUZDguR+aK05kLGT79vfgNjFLFt5FR985zL+8fJpvLG/kD/v6VnX\nuKm1nfeOlnDt7Ci8PEbWCOPKmRFU1rf0n78791aTF118sP+Tc7bD09fCrxbA7t9DWwsH8kq5u/Vl\nqgPTYcb6Aa+7KCGYS9PCeHLbGXadqcBmUaYkm4skhPoQF+zNp71m4bNKatnSvhAL7bD/WYhI7yqv\nJ4QQQgjhZhIk9yP7xFEeOv9vWO1e8LmnAPDysPLAupmsTg3jZ+9lUVrX1Hn8lqxS6prbuGlhzIiv\nefn0cCyK/lMu5nzOlJQ78GL/J2c8BV5BEDEL3v0X+M0SLO98hwRLGfZr/u2CqR/3r0mjor6F53fm\nMSPKf8SB/kBWpoSy83RFj1nyzKJaDug0HF7B0NYkTUSEEEIIMaFIkNxbbTFhf7kNO220fv4NCEnu\n3KWUaZ/c3Obgv9453rn9rYOFhPl5stKZWjASQT52FiUEs+VEP0GydxDMugGOvAptzT33nS+D4++Y\nKhR3/xXueh3tGcDCir9xxj4Tn9kDzyJ3WJwYwurUMNoc2qX5yB1WpYZR29TWo3lJZmEtgT6eqLQ1\nZoMs2hNCCCHEBCJBcncNlejnb8LeXMljMQ8TmDivzyHJYb5844oU/nqoiG0ny6hpaGVrVhmfmR+N\n1TL0xXr9uXJmBEcLaymtbeq7c8HnoakaTrzbc/vBF8DR2tXdL3UNb6/YyD0tP6Domt8OeQHh/WvS\nABMwu9olKaEAfJrdlZd8rLiW2TGBqPSbQFmHVQ1ECCGEEGKsSZDcoakWXvgsuuIM97Z8n/nLrxrw\n0K9fkcK0MF/+/a2jvHmwkJZ2BzctiB31EK6cEQHARyf6KQU37Urwj4GDf+7a5nCYRieJqyF8BmDy\nqZ/8JJe80NWsXDz0usNLkkL48DuXcdOCkaeMDCTC34vpkX7sOG3yklvbHZwoqTP1kWfdAN/LgtAU\nl19XCCGEEGKkJEjuYLGBfzTPJzzIYdtcrkmPHPBQT5uV/3fzHPIqGnjob8dJDvN1SZrCrGh/ogK8\n2NJfXrLFatpcZ38Idc4W1me2QlUuLLmn87BdZyo5WljLV1dPwzLMme20SH9s1rF5JFamhLE3t5Lm\ntnayS8/T0u4wnfYA/CLG5JpCCCGEECMlQXIHuw/NtzzPI3kprE2PxMduG/TwlSlhfHZhLC3tFoTN\nbwAAC7hJREFUDm6cH4MaRl3kgSiluHJmOJ9kl9PS5uh7wILPg3bA4ZfNz/v+BD6hzlrKxpPbzxDq\na+ezi0Y/s+1Kq1LDaGp1cCC/mkxnm+rOIFkIIYQQYoKRILmbj0+WU9PYyoYhpk78+PpZ3Lo4ji8s\nT3DZGK6cEcH55jYyciv77gxLg7hlJuWithiyNsGCL4DNE4Ds0jq2ZJXyxUsSXV6hYrSWJYdgUbAj\nu5zMohq8Pawkh/m5e1hCCCGEEP2SILmbtw4WEeJrZ3Xa0KpUhPp58vNb5xMR4OWyMaxKDcNutfD3\n4/2kXAAs/AKUZdH01v2g282CPaenPsnB02bhiysSXTYeVwn09mBuXBA7TleQWVTLzGj/US90FEII\nIYQYKxIkOx08W82Hx87xmXnReIxRXu5Q+HraWJ0WxvuZJej+OuzNvpk2iydep9/jpM9iSu1m1rv8\nfDOv7y/kc4vjCPXzHOdRD82qlFAOnq0ms7DGpQ1LhBBCCCFcTYJkoKSmifueyyAiwJNvXZ3m7uGw\nfm40hdWNHCqo6bvTK5BPbCsAeKx2NVf/4mOe3ZHLM5/m0tLm4N7VyX3PmSBWOWsx17e0MzvG9fWY\nhRBCCCFcZfDVaVNAU2s79z2fQX1zG8/du3JCzMJeMysSD6ti05FiFsQH9diXXXqe/1d3PREpkXzn\nhvup/tspfvJ2JgBrZkWQEj5x83wXJwZjt1loaXPIoj0hhBBCTGhTeiZZa80PXjvMkcIa/u+OhcyM\nmhiBW6CPB6tSw/jb4eI+KRdvHSzkDHGE3f4Y06JCeO4ry3j884tYnBjM/Wumu2nEQ+PlYWVJYjBW\ni2JGlL+7hyOEEEIIMaApPZP8249O89dDRfzg2hmD1kV2h/Vzo/mXEyaAnxdnZpO11rx1sIhVqWFE\n+JvFgkoprp8XzfXzot053CH72uUprEwJnXDVN4QQQgghupuyM8nbT5Xx8/dPsGFBDN+4YuJ1e1ub\nHonNovjbkeLObQfOVpNf2cCN813fFW+8XDY9nH+6yv1530IIIYQQg5myQfKSxBC+dXUa//u5eS5p\nBOJqQT52VqaGselIV8rF2weL8LRZWDcnys2jE0IIIYS4uE3ZINnbbuW710yf0H/2v35uFGcrG8ks\nqqWt3cE7h4tYMysSfy8Pdw9NCCGEEOKiNmWD5MlgbXoUVmfKxSfZ5ZSfb+HGBZM31UIIIYQQYrKY\n0gv3JrpgXzsrU0LZdKSYkpomArxsXDEj3N3DEkIIIYS46MlM8gS3fm40eRUN/PVQEdfPi8bTNnHT\nQ4QQQgghLhYSJE9wa9MjsVoUbQ7NjfNj3T0cIYQQQogp4YJBslLqaaVUqVLqaLdtIUqpD5VSp5yv\nwc7tSin1a6VUtlLqsFJq0VgOfioI9fNkZUoosUHeLE8OcfdwhBBCCCGmhKHMJD8DrOu17QFgs9Y6\nDdjs/BngOiDN+XUf8IRrhjm1PXr7Al66bwUWy8QrVSeEEEIIcTG6YJCstd4GVPbavAF41vn9s8BN\n3bY/p41dQJBSanK0gpvAwvw8iQ/xcfcwhBBCCCGmjJHmJEdqrTtawZUAHT2dY4Gz3Y4rcG4TQggh\nhBBi0hj1wj1t2sHp4Z6nlLpPKZWhlMooKysb7TCEEEIIIYRwmZEGyec60iicr6XO7YVAfLfj4pzb\n+tBa/0FrvURrvSQ8XGr/CiGEEEKIiWOkQfLbwN3O7+8G3uq2/UvOKhcrgJpuaRlCCCGEEEJMChfs\nuKeU2ghcAYQppQqAnwAPA68ope4F8oDbnIdvAtYD2UADcM8YjFkIIYQQQogxdcEgWWt95wC7ru7n\nWA18c7SDEkIIIYQQwp2k454QQgghhBC9SJAshBBCCCFELxIkCyGEEEII0YsEyUIIIYQQQvQiQbIQ\nQgghhBC9SJAshBBCCCFELxIkCyGEEEII0YsEyUIIIYQQQvQiQbIQQgghhBC9SJAshBBCCCFELxIk\nCyGEEEII0YsEyUIIIYQQQvQiQbIQQgghhBC9SJAshBBCCCFEL0pr7e4xoJQqA/LcdPkwoNxN175Y\nyT11Pbmnrif31PXknrqe3FPXk3vqepPtniZqrcMvdNCECJLdSSmVobVe4u5xXEzknrqe3FPXk3vq\nenJPXU/uqevJPXW9i/WeSrqFEEIIIYQQvUiQLIQQQgghRC8SJMMf3D2Ai5DcU9eTe+p6ck9dT+6p\n68k9dT25p653Ud7TKZ+TLIQQQgghRG8ykyyEEEIIIUQvUzZIVkqtU0qdUEplK6UecPd4JiOlVLxS\naqtS6phSKlMp9W3n9hCl1IdKqVPO12B3j3WyUUpZlVIHlFLvOH9OVkrtdj6vLyul7O4e42SilApS\nSr2mlMpSSh1XSl0iz+noKKW+4/z//VGl1EallJc8p8OnlHpaKVWqlDrabVu/z6Yyfu28v4eVUovc\nN/KJa4B7+nPn//8PK6X+opQK6rbvh857ekIpda17Rj2x9XdPu+37nlJKK6XCnD9fNM/plAySlVJW\n4HHgOiAduFMple7eUU1KbcD3tNbpwArgm877+ACwWWudBmx2/iyG59vA8W4//y/wqNY6FagC7nXL\nqCavXwHvaa1nAvMx91ae0xFSSsUC3wKWaK3nAFbgDuQ5HYlngHW9tg30bF4HpDm/7gOeGKcxTjbP\n0PeefgjM0VrPA04CPwRw/pt1BzDbec5vnTGC6OkZ+t5TlFLxwFogv9vmi+Y5nZJBMrAMyNZan9Fa\ntwAvARvcPKZJR2tdrLXe7/y+DhN4xGLu5bPOw54FbnLPCCcnpVQccD3wR+fPCrgKeM15iNzTYVBK\nBQKXAU8BaK1btNbVyHM6WjbAWyllA3yAYuQ5HTat9TagstfmgZ7NDcBz2tgFBCmlosdnpJNHf/dU\na/2B1rrN+eMuIM75/QbgJa11s9Y6B8jGxAiimwGeU4BHgX8Bui9wu2ie06kaJMcCZ7v9XODcJkZI\nKZUELAR2A5Fa62LnrhIg0k3Dmqz+D/MfHYfz51Cgutt/4OV5HZ5koAz4kzOF5Y9KKV/kOR0xrXUh\n8AvM7FExUAPsQ55TVxno2ZR/u1zjK8C7zu/lno6QUmoDUKi1PtRr10VzT6dqkCxcSCnlB7wO3K+1\nru2+T5vyKVJCZYiUUjcApVrrfe4ey0XEBiwCntBaLwTq6ZVaIc/p8DhzZDdgfgGJAXzp50+xYvTk\n2XQtpdSPMamCL7p7LJOZUsoH+BHwH+4ey1iaqkFyIRDf7ec45zYxTEopD0yA/KLW+g3n5nMdf1px\nvpa6a3yT0CrgRqVULiYN6CpMPm2Q88/aIM/rcBUABVrr3c6fX8MEzfKcjtwaIEdrXaa1bgXewDy7\n8py6xkDPpvzbNQpKqS8DNwBf0F31b+WejkwK5pfkQ85/r+KA/UqpKC6iezpVg+S9QJpzJbYdk7T/\ntpvHNOk4c2WfAo5rrR/ptutt4G7n93cDb4332CYrrfUPtdZxWuskzHO5RWv9BWArcIvzMLmnw6C1\nLgHOKqVmODddDRxDntPRyAdWKKV8nP8d6Lin8py6xkDP5tvAl5zVA1YANd3SMsQglFLrMGlsN2qt\nG7rtehu4QynlqZRKxiw22+OOMU4mWusjWusIrXWS89+rAmCR87+3F81zOmWbiSil1mNyP63A01rr\nh9w8pElHKbUa2A4coSt/9keYvORXgAQgD7hNa91fwr8YhFLqCuD7WusblFLTMDPLIcAB4C6tdbM7\nxzeZKKUWYBZC2oEzwD2YSQJ5TkdIKfWfwO2YP10fAL6KyTuU53QYlFIbgSuAMOAc8BPgTfp5Np2/\nkPwGk9rSANyjtc5wx7gnsgHu6Q8BT6DCedgurfXXnMf/GJOn3IZJG3y393tOdf3dU631U93252Kq\n3ZRfTM/plA2ShRBCCCGEGMhUTbcQQgghhBBiQBIkCyGEEEII0YsEyUIIIYQQQvQiQbIQQgghhBC9\nSJAshBBCCCFELxIkCyGEEEII0YsEyUIIIYQQQvQiQbIQQgghhBC9/H9KVbfgh6nE/gAAAABJRU5E\nrkJggg==\n","text/plain":["<Figure size 864x648 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"0coQTip3HLew","colab_type":"text"},"source":["We can see that the model did an excellent job of fitting both the training and the test datasets.\n","\n","We can see that the model has an average error of about 23 passengers (in thousands) on the training dataset, and about 52 passengers (in thousands) on the test dataset. Not that bad."]},{"cell_type":"code","metadata":{"id":"EA7oi7lJHPEA","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}